{"version":3,"sources":["components/MovieCard/index.js","services/HttpService.js","config.js","components/PopularMovies/index.js","components/SearchBar/index.js","components/Home/index.js","components/Movie/index.js","index.js","routes/index.js"],"names":["MovieDetails","styled","li","_templateObject","FlexCard","div","_templateObject2","Image","img","_templateObject3","MovieCard","this","props","data","poster_path","react_default","a","createElement","react_router_dom","to","concat","id","key","src","alt","title","React","Component","Axios","axios","create","baseURL","params","api_key","HttpService","url","get","FlexContainer","ul","PopularMovies_templateObject","Content","PopularMovies_templateObject2","Loader","PopularMovies_templateObject3","PopularMovies","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","page","prev","getMoreQueryResults","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","newPage","setState","_this2","language","then","response","results","toConsumableArray","catch","err","console","log","_this3","map","value","components_MovieCard","ref","SearchBar_templateObject","InputForm","form","SearchBar_templateObject2","Input","input","SearchBar_templateObject3","SearchResults","_templateObject4","LoadMsg","p","_templateObject5","initialState","movieId","listExhausted","SearchBar","handleInputChange","e","target","setTimeout","val","length","query","filteredData","regexpMatch","re","RegExp","_","escapeRegExp","filter","res","test","handleScroll","assertThisInitialized","window","addEventListener","removeEventListener","innerHeight","scrollY","getMoreSearchResults","_this$state","newData","SearchBar_Content","placeholder","onChange","debounce","leading","maxWait","Header","h1","Home_templateObject","Home","components_SearchBar","components_PopularMovies","Container","Movie_templateObject","Movie_templateObject2","Head","Movie_templateObject3","Card","Movie_templateObject4","Details","Movie_templateObject5","Video","iframe","_templateObject6","Movie","trailerFound","match","append_to_response","undefined","videos","find","x","type","movie","Movie_FlexContainer","tagline","overview","release_date","vote_count","vote_average","getTrailer","App","react_router","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.706f4b72.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = styled.li`\n    display: inline-block;\n    align-self: center;\n    padding: 8px 2% 8px 2%;\n    margin-bottom: 15px;\n`;\n\nconst FlexCard = styled.div`\n    text-align: center;\n    height: 320px;\n    width: 240px;\n`;\n\nconst Image = styled.img`\n    max-height: 280px;\n    max-width: 185px;\n`\n\n/**\n * Card for one movie on the homepage\n * Link to Movie Details page for a particular movie\n * Returns null if the poster is not found\n *\n * @class MovieCard\n * @props Component Properties\n */\nclass MovieCard extends React.Component {\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w185';\n\n        return (\n            this.props.data.poster_path ? (\n                <MovieDetails >\n                    <Link to={`/movie/${this.props.data.id}`} key={this.props.data.id}>\n                        <FlexCard>\n                            <Image \n                                src={imageURL+this.props.data.poster_path} alt={this.props.data.title}>\n                            </Image>\n                            <p>{this.props.data.title}</p>\n                        </FlexCard>        \n                    </Link>\n                </MovieDetails>\n            ) : (\n                null   \n            )\n        )\n    }\n}\n\nexport default MovieCard;\n","import axios from 'axios';\nimport { apiKey}  from '../config';\n\n// Create axios instance\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\n/**\n * HTTP Service to make API calls for above set base URL\n *\n * @class HttpService\n */\nclass HttpService {\n    /**\n     * GET Method for HTTP Call\n     *\n     * @static\n     * @param {string} url API URL\n     * @param {object} params Parameters for request\n     * @returns Axios response object\n     * @memberof HttpService\n     */\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","export const apiKey = '2556ac28d3c2f708dba5bb4bbb73cbe3';","import React from 'react';\nimport styled from 'styled-components';\n\nimport MovieCard from '../MovieCard/';\nimport HttpService from '../../services/HttpService';\n\nconst FlexContainer = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    margin: 10px ;\n    align-content: center;\n`;\n\nconst Content = styled.div`\n    min-height: 900px;\n`;\n\nconst Loader = styled.div`\n    display: block;\n    text-align: center;\n`;\n\n/**\n * Renders and infinitely scrollable list\n * Stores the data in state as an Array and calls MovieCard to show each movie\n *\n * @class PopularMovies\n * @state Component State\n */\nclass PopularMovies extends React.Component {\n    /**\n     * Creates an instance of PopularMovies.\n     * \n     * @param {*} props\n     * @memberof PopularMovies\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            page: 1,\n            data: [],\n            prev: 0,\n        }\n    }\n\n    /**\n     * Calls the first set of data from API call\n     * Initializes the Intersection Observer to assist in infinite scroll\n     *\n     * @memberof PopularMovies\n     * @props Component Properties\n     */\n    componentDidMount() {\n        this.getMoreQueryResults();\n        \n        // Set options for observer\n        var options = {\n            root: null, // Set page as root\n            rootMargin: '0px', \n            threshold: 0.2\n        };\n\n        // Create an instance of Intersection Observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n\n        // Observe the ref with value loadingRef\n        this.observer.observe(this.loadingRef);\n    }\n    \n    /**\n     * Handle the observer's action or observation\n     *\n     * @param {array} entities\n     * @memberof PopularMovies\n     */\n    handleObserver(entities) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prev > y) {\n          const newPage = this.state.page + 1;\n          this.setState({ page: newPage, isLoading: true });\n          this.getMoreQueryResults();\n        }\n        this.setState({ prev: y });\n    }\n\n    /**\n     * Fetch more movies via API call incrementing the page by one\n     * And add them to state\n     * @memberof PopularMovies\n     */\n    getMoreQueryResults() {\n        HttpService.get('/movie/popular', {language: 'en-US', page: this.state.page}).then(response => {\n            const results = this.state.data;\n            this.setState({\n                data: [...results, ...response.data.results],\n                isLoading: false,\n            });\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n    render() {\n        return (\n            <Content>\n                <FlexContainer >\n                    {this.state.data.map((value) => (\n                        <MovieCard data={value} key={value.id}/>\n                        ))}\n                    <Loader ref={loadingRef => (this.loadingRef = loadingRef)} >\n                        <h3>Loading...</h3>\n                    </Loader>\n                </FlexContainer>\n            </Content>\n        )\n    }\n}\n\nexport default PopularMovies;\n","import React from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\nimport MovieCard from '../MovieCard/';\n\nconst Content = styled.div`\n\ttext-align: center;\n\talign-content: center;\n`;\n\nconst InputForm = styled.form`\n\tbackground-color: lightgray;\n`;\n\nconst Input = styled.input`\n\ttext-align: center;\n\twidth: 40%;\n\theight: 35px;\n`;\n\nconst SearchResults = styled.ul`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: baseline;\n\talign-content: left;\n`;\n\nconst LoadMsg = styled.p`\n\tfont-size: 20px;\n`;\n\nconst initialState = {\n\tisLoading: false,\n\tresults: [],\n\tvalue: '',\n\ttitle: [],\n\tmovieId: [],\n\tpage: 1,\n\tlistExhausted: false,\n};\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchBar\n * @props Component Properties\n * @state Component State\n */\nclass SearchBar extends React.Component {\n\t/**\n\t * Creates an instance of SearchBar.\n\t * \n\t * @param {*} props\n\t * @memberof SearchBar\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = initialState;\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t}\n\n\t/**\n\t * Adds event listener - scroll before component mounts\n\t *\n\t * @memberof SearchBar\n\t */\n\tcomponentDidMount() {\n\t\twindow.addEventListener('scroll', this.handleScroll);\n\t}\n\n\t/**\n\t * Removes event listener - scroll before component unmounts\n\t *\n\t * @memberof SearchBar\n\t */\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('scroll', this.handleScroll);\n\t}\n\n\t/**\n\t * Handler for scrolling action captured by event listener\n\t *\n\t * @memberof SearchBar\n\t */\n\thandleScroll() {\n\t\tif(!this.state.listExhausted && (window.innerHeight + window.scrollY) > (window.innerHeight - 100) && !this.state.isLoading && (this.state.value !== '')) {\n\t\t\tconst newPage = this.state.page+1;\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true,\n\t\t\t\tpage: newPage\n\t\t\t});\n\t\t\tthis.getMoreSearchResults();\n\t\t}\n\t}\n\n\t/**\n\t * HTTP call to fetch more search results from the API, basically for the next page\n\t *\n\t * @memberof SearchBar\n\t */\n\tgetMoreSearchResults() {\n\t\tconst { value, page, results } = this.state;\n\t\tHttpService.get(`/search/movie`, {\n\t\t\tlanguage: 'en-US',\n\t\t\tquery : value,\n\t\t\tpage: page\n\t\t}).then(response => {\n\t\t\tconst newData = response.data.results;\n\t\t\tconst filteredData = this.regexpMatch(value, newData);\n\t\t\tif(newData.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tresults: [...results, ...filteredData],\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tlistExhausted: true,\n\t\t\t\t})\n\t\t\t}}).catch((err) => {\n\t\t\t\tconsole.log(err.response);\n\t\t});\n\t}\n\n\t/**\n\t * Handler for input in searchbar\n\t *\n\t * @memberof SearchBar\n\t * @param {object} event event trigerred by onChange in Input value\n\t */\n\thandleInputChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tthis.setState({ isLoading: true,\n\t\t\tvalue: value\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tconst val = this.state.value;\n\t\t\tif (val.length < 1) {\n\t\t\t\treturn this.setState(initialState);\n\t\t\t}\n\t\t\t\n\t\t\tHttpService.get(`/search/movie`, {\n\t\t\t\tlanguage: 'en-US',\n\t\t\t\tquery : value,\n\t\t\t\tpage:this.state.page\n\t\t\t}).then(response => {\n\t\t\t\tconst data = response.data.results;\n\t\t\t\tconst filteredData = this.regexpMatch(val, data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tresults: filteredData,\n\t\t\t\t});\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err.response);\n\t\t\t});\n\t\t}, 300);\n\t}\n\n\t/**\n\t * Performs reg exp match for search string in the results\n\t *\n\t * @memberof SearchBar\n\t * @param {string} value value of search string\n\t * @param {string} data value of result of API call\n\t */\n\tregexpMatch = (value, data) => {\n\t\tconst re = new RegExp(_.escapeRegExp(value), 'i');\n\t\tconst isMatch = (res) => re.test(res.title);\n\t\treturn _.filter(data, isMatch);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Content>\n\t\t\t\t<InputForm>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tplaceholder=\"Search for movie...\"\n\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\tonChange={_.debounce(this.handleInputChange, 1000, {\n\t\t\t\t\t\t\tleading: true,\n\t\t\t\t\t\t\tmaxWait: 1500,\n\t\t\t\t\t\t})} />\n\t\t\t\t</InputForm>\n\t\t\t\t<SearchResults>\n\t\t\t\t\t{this.state.results.map((value) => (\n\t\t\t\t\t\t<MovieCard data={value} key={value.id}/>\n\t\t\t\t\t))}\n\t\t\t\t\t{!this.state.listExhausted ? (\n\t\t\t\t\t\tthis.state.isLoading && <LoadMsg>Searching for movies please wait...</LoadMsg>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<LoadMsg>\n\t\t\t\t\t\t\tNo more search results to show\n\t\t\t\t\t\t</LoadMsg>\t\t\t\t\t\n\t\t\t\t\t)}\n\t\t\t\t</SearchResults>  \n\t\t\t</Content>\n\t\t)\n\t}\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PopularMovies from '../PopularMovies';\nimport SearchBar from '../SearchBar/';\n\nconst Header = styled.h1`\n    text-align: center;\n    border-bottom: 0.5px solid black;\n    padding-bottom: 10px;\n`\n\n/**\n * Home component\n * Renders other child components of the homepage\n *\n * @class Home\n */\nclass Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <Header>Movie Hunter</Header>\n                <SearchBar />\n                <Header>Popular Movies</Header>\n                <PopularMovies />        \n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\n\nconst Container = styled.div`\n    display: block;\n`\nconst FlexContainer = styled.div`\n    display: flex;\n    column-count: 2;\n    column-gap: 25%;\n`\n\nconst Head = styled.h1`\n    display: block;\n    align-content: center;\n    text-align: center;\n    margin-block-end: 3%;\n`;\n\nconst Card = styled.div`\n    margin-top: 1.5%;\n    margin-right: 1.5%;\n    text-align: right;\n    border-right: 2px solid black;\n    padding-right: 3%;\n    width: 50%;\n`;\n\nconst Details = styled.div`\n    text-align: left;\n    width: 50%;\n    margin-right: 10%;\n    margin-left: 1.5%;\n`;\n\nconst Video = styled.iframe`\n    height: 90%;\n    width: 100%;\n`;\n\n/**\n * Renders the component for Movie Details\n * Shows movie title, poster, synopsis and trailer a few more details\n *\n * @class Movie\n * @props Component Properties\n * @state Component State\n */\nclass Movie extends React.Component {\n    /**\n     * Creates an instance of Movie.\n     *\n     * @param {*} props\n     * @memberof Movie\n     */\n    constructor(props) {\n        super(props)\n            this.state = {\n            data: {},\n            trailerFound: true\n        }\n    }\n    \n    /**\n     * Perfoms API call to get movie details\n     * Uses HTTP Service\n     * \n     * @memberof Movie\n     */\n    componentWillMount() {\n        const {match: {params: {movieId} } } = this.props;\n        HttpService.get(`/movie/${movieId}`, {language: 'en-US', append_to_response: 'videos'}).then(response => {\n            this.setState({\n                data: response.data,\n            });\n        }).catch((err) => {\n            console.log(err.response);\n        });\n\n    }\n\n    /**\n     * Checks whether trailer is found in JSON fetched from movie details\n     *\n     * @returns youtube key of trailer\n     * @memberof Movie\n     */\n    getTrailer() {\n        if (this.state.data.videos !== undefined) {\n            const videos = this.state.data.videos.results.find((x) => {\n                return x.type === \"Trailer\";\n            });\n            if (videos === undefined) {\n                this.setState({\n                    trailerFound: false\n                });\n            } else {\n                return videos.key;\n            }\n        }\n    }\n\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w200';\n        const movie = this.state.data;      \n        return (\n            <Container>\n                <Head>\n                    <Link to='/'>\n                        Movie Hunter\n                    </Link>\n                </Head>\n                <hr></hr>\n                <FlexContainer>\n                    <Card>\n                        <img src={imageURL+movie.poster_path} alt='loading'></img>\n                        <h2><strong>{movie.title}</strong></h2>\n                        <p>{movie.tagline}</p>\n                    </Card>\n                    <Details>\n                        <p><strong>Synopsis: </strong>{movie.overview}</p>\n                        <p>Released on: {movie.release_date}</p>\n                        {movie.vote_count === 0 ? (\n                            null\n                        ) : (\n                            <p>Rated {movie.vote_average} by {movie.vote_count} votes</p>\n                        )}\n                        {this.state.trailerFound ? (\n                            <Video src={`https://www.youtube.com/embed/${this.getTrailer()}`}>\n\n                            </Video>\n                        ) : (\n                            <p>Trailer not found</p>\n                        )}\n                    </Details>\n                </FlexContainer>\n            </Container>\n        )\n    }\n}\n\nexport default Movie;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './routes';\n// import * as registerServiceWorker from './serviceWorker';\n\n// Define app\nconst App = (\n    <Routes />\n);\n\nReactDOM.render(App, document.getElementById('root'));\n// registerServiceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from '../components/Home/';\nimport Movie from '../components/Movie/';\n\n/**\n * Create routes \n */\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/movie/:movieId\" exact component={Movie} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}