{"version":3,"sources":["store/movieDetails/reducer.js","store/movieDetails/constants.js","store/searchMovie/reducer.js","store/searchMovie/constants.js","store/configStore.js","components/Home/Home.js","components/SearchBar/SearchQuery.js","components/SearchBar/MovieCard/MovieCard.js","components/SearchBar/SearchResults.js","packages/Loader.js","services/HttpService.js","config.js","helpers/searchMovie.js","helpers/getMovieList.js","helpers/regexpFilter.js","components/SearchBar/SearchBarContainer.js","store/searchMovie/action.js","components/Home/HomeContainer.js","components/Movie/Movie.js","helpers/getMovie.js","helpers/getTrailer.js","store/movieDetails/action.js","components/Movie/MovieContainer.js","routes/index.js","serviceWorker.js","index.js"],"names":["initialState","isLoading","data","trailer","error","getMovieDetails","state","arguments","length","undefined","action","type","Object","objectSpread","payload","key","results","value","list","page","listExhausted","prev","searchMovie","concat","toConsumableArray","scroll","middlewareList","applyMiddleware","thunk","createLogger","appReducer","combineReducers","router","routerReducer","movie","rootReducer","configStore","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","Header","styled","h1","_templateObject","Home","props","react_default","a","createElement","Wrapper","div","SearchQuery_templateObject","InputForm","form","_templateObject2","Input","input","_templateObject3","SearchQuery","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchString","handleInputChange","bind","assertThisInitialized","delayed","_","debounce","onSearchChange","event","persist","target","setState","onSubmit","preventDefault","placeholder","onChange","React","Component","MovieDetails","li","MovieCard_templateObject","FlexCard","MovieCard_templateObject2","Image","img","MovieCard_templateObject3","Title","p","_templateObject4","MovieCard","posterPath","id","title","react_router_dom","to","src","alt","Content","SearchResults_templateObject","SearchResultsDiv","SearchResults_templateObject2","SearchResults","ul","SearchResults_templateObject3","MessageDiv","SearchResults_templateObject4","Message","_templateObject5","SearchBarResults","map","SearchBar_MovieCard_MovieCard","poster_path","exhausted","Animation","keyframes","Loader_templateObject","Loader_templateObject2","Circle","Loader_templateObject3","delay","Loader","Loader_Wrapper","Axios","axios","create","baseURL","params","api_key","HttpService","url","get","language","query","then","_ref","catch","err","Promise","reject","response","getMovieList","regexpFilter","re","RegExp","escapeRegExp","filter","res","test","LoaderWrapper","SearchBarContainer_templateObject","SearchBarContainer","loadingRef","createRef","handleSearchChange","_this2","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","observe","current","resetSearch","disconnect","entities","y","boundingClientRect","_this$props","setScrollValue","val","_this3","_this$props2","_this$props3","react","SearchBar_SearchQuery","SearchBar_SearchResults","loading","ref","packages_Loader","mapDispatchToProps","dispatch","reqMovieSearch","_searchMovie","filtered","searchMovieSuccess","searchMovieError","_getMovieList","getMovieListSuccess","getMovieListError","scroller","setScroller","connect","_ref$movie","HomeContainer","components_Home_Home","SearchBar_SearchBarContainer","Movie_templateObject","Container","Movie_templateObject2","Head","Movie_templateObject3","Card","Movie_templateObject4","Details","Movie_templateObject5","_templateObject6","Subheading","_templateObject7","Tagline","_templateObject8","Overview","_templateObject9","_templateObject10","Video","iframe","_templateObject11","_templateObject12","Movie","tagline","overview","releaseDate","voteAverage","voteCount","Movie_Wrapper","Movie_Image","Movie_Title","Movie_Content","append_to_response","getMovie","movieId","getTrailer","videos","result","find","x","trailerKey","getMovieDetailsSuccess","getMovieDetailsError","MovieContainer","match","_this$props$data","release_date","vote_average","vote_count","components_Movie_Movie","_ref$getMovieDetails","ConfigRoute","react_redux_es","store","react_router","assign","exact","path","component","Boolean","location","hostname","__webpack_require__","d","__webpack_exports__","App","routes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eefd0c0.chunk.js","sourcesContent":["import { \n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n} from './constants';\n\n// Initial State\nconst initialState = {\n    isLoading: false,\n    data: {},\n    trailer: '',\n    error: null\n};\n\n// Reducer\nconst getMovieDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_MOVIE_DETAILS:\n            return { ...initialState, isLoading: true };\n        case GET_MOVIE_DETAILS_SUCCESS:\n            return { ...state,\n                    isLoading: false,\n                    data: action.payload,\n                    trailer: action.key,\n                };\n        case GET_MOVIE_DETAILS_ERROR:\n                return { ...state,\n                    error: action.payload.error\n                }; \n        default:\n            return state;\n    }\n}\n\nexport default getMovieDetails;","// Request movie details from API constant\nconst REQUEST_MOVIE_DETAILS = 'REQUEST_MOVIE_DETAILS';\n\n// Movie details from API succuess constant\nconst GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\n\n// Movie details from API failure constant\nconst GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\n\nexport {\n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n};","import { \n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    RESET_SEARCH_BAR,\n    REQUEST_MORE_SEARCH_RESULTS,\n    NO_MORE_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n    SET_SCROLLER_VALUE\n} from './constants';\n\n// Initial State\nconst initialState = {\n    isLoading: true,\n    results: [],\n    value: '',\n    list: 1,\n    page: 1,\n    listExhausted: false,\n    prev: 0,\n    error: null\n};\n\n// Reducer\nconst searchMovie = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_MOVIE_SEARCH:\n            return { ...initialState,\n                    isLoading: true,\n                    value: action.value,\n                    page: action.page\n                };\n        case REQUEST_MORE_SEARCH_RESULTS:\n            return {...state, isLoading: true};\n        case SEARCH_MOVIE_SUCCESS:\n            return { ...state,\n                    isLoading: false,\n                    results: [...state.results, ...action.payload],\n                    page: action.page\n                };\n        case SEARCH_MOVIE_ERROR:\n            return { ...state,\n                    error: action.payload.error,\n                    page: action.page\n                };\n        case RESET_SEARCH_BAR:\n            return initialState;\n        case NO_MORE_RESULTS:\n            return {...state, listExhausted: true};\n        case REQUEST_MOVIE_LIST:\n            return { ...initialState, isLoading: true, list: action.page};\n        case REQUEST_MORE_MOVIES:\n            return {...state, isLoading: true};\n        case GET_MOVIE_LIST_SUCCESS:\n            return { ...state,\n                    isLoading: false,\n                    results: [...state.results, ...action.payload],\n                    list: action.page,\n                };\n        case GET_MOVIE_LIST_ERROR:\n            return { ...state,\n                    error: action.payload.error,\n                    list: action.page\n                }; \n        case SET_SCROLLER_VALUE:\n            return { ...state,\n                    prev: action.scroll\n                };\n        default:\n            return state;\n    }\n}\n\nexport default searchMovie;","// Request search movie from API constant\nconst REQUEST_MOVIE_SEARCH = 'REQUEST_MOVIE_SEARCH';\n\n// Search movie from API success constant\nconst SEARCH_MOVIE_SUCCESS = 'SEARCH_MOVIE_SUCCESS';\n\n// Search movie from API failure constant\nconst SEARCH_MOVIE_ERROR = 'SEARCH_MOVIE_ERROR';\n\n// Request for more search results from API constant\nconst REQUEST_MORE_SEARCH_RESULTS = 'REQUEST_MORE_SEARCH_RESULTS';\n\n// Reset the value and state of search bar constant\nconst RESET_SEARCH_BAR = 'RESET_SEARCH_BAR';\n\n// Set scroller value constant\nconst SET_SCROLLER_VALUE = 'SET_SCROLLER_VALUE';\n\n// No more search results from the API constant\nconst NO_MORE_RESULTS = 'NO_MORE_RESULTS';\n\n// Request popular movies from API constant\nconst REQUEST_MOVIE_LIST = 'REQUEST_MOVIE_LIST';\n\n// Popular movies from API success constant\nconst GET_MOVIE_LIST_SUCCESS = 'GET_MOVIE_LIST_SUCCESS';\n\n// Popular movies from API failure constant\nconst GET_MOVIE_LIST_ERROR = 'GET_MOVIE_LIST_ERROR';\n\n// Request more movies from API constant\nconst REQUEST_MORE_MOVIES = 'REQUEST_MORE_MOVIES';\n\n\nexport {\n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    RESET_SEARCH_BAR,\n    REQUEST_MORE_SEARCH_RESULTS,\n    NO_MORE_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n    SET_SCROLLER_VALUE\n};","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { routerReducer } from 'react-router-redux';\nimport getMovieDetails from './movieDetails/reducer';\nimport movie from './searchMovie/reducer';\n\nconst middlewareList =  applyMiddleware(thunk, createLogger());\n\n// Reducer\nconst appReducer = combineReducers({\n    router: routerReducer,\n    getMovieDetails,\n    movie\n});\n\n/**\n * Root reducer\n * @param {Object} state Current state\n * @param {Object} action Action\n * @return {Object} App reducer\n */\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n}\n\n// Create Store with enabled redux devTools\nconst configStore = (initialState) => createStore(rootReducer, compose(middlewareList,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nexport default configStore;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.h1`\n    text-align: center;\n    border-bottom: 0.8px solid black;\n    padding-bottom: 12px;\n`\n\n/**\n * Home component\n * \n * @param {object} props props from the parent component\n */\n const Home = props => {\n    return (\n        <Header>Movie Hunter</Header>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    align-content: center;\n    text-align: center;\n`;\nconst InputForm = styled.form`\n\tbackground-color: lightgray;\n`;\n\nconst Input = styled.input`\n\ttext-align: center;\n\twidth: 40%;\n\theight: 36px;\n`;\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchQuery\n * @props Component Properties\n */\nclass SearchQuery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: ''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.delayed = _.debounce(this.props.onSearchChange, 300);\n    }\n\n\t/**\n     * Handle the change in input\n     *\n     * @memberof SearchQuery\n     */\n    handleInputChange(event) {\n        event.persist()\n\t\tconst value = event.target.value;\n\t\tthis.setState({ \n\t\t\tsearchString: value\n        });\n        this.delayed(value);\n        // this.props.onSearchChange(value);\n    }\n\n\trender() {\n\t\treturn (\n            <Wrapper>\n                <InputForm onSubmit={event => event.preventDefault()}>\n                    <Input\n                        placeholder=\"Search for movie...\"\n                        value={this.state.searchString}\n                        onChange={this.handleInputChange}\n                    />\n                </InputForm>\n            </Wrapper>\n\t\t)\n\t}\n}\n\nexport default SearchQuery;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = styled.li`\n    display: inline-block;\n    justify-content: center;\n    padding: 12px 4px 12px 4px;\n    margin-bottom: 20px;\n`;\n\nconst FlexCard = styled.div`\n    text-align: center;\n    height: 320px;\n    width: 240px;\n`;\n\nconst Image = styled.img`\n    max-height: 280px;\n    max-width: 185px;\n`;\n\nconst Title = styled.p`\n    font-size: 16px;\n`;\n\n/**\n * Card for one movie on the homepage\n * Link to Movie Details page for a particular movie\n * Returns nothing if the poster is not found\n *\n * @param {object} props props from the parent component\n */\nconst MovieCard = props => {\n    const imageURL = 'http://image.tmdb.org/t/p/w185';\n    const {posterPath, id, title} = props;\n    return (\n        posterPath && (\n            <MovieDetails >\n                <Link to={`/movie/${id}`} key={id}>\n                    <FlexCard>\n                        <Image \n                            src={`${imageURL}${posterPath}`} alt={title}>\n                        </Image>\n                        <Title>{title}</Title>\n                    </FlexCard>        \n                </Link>\n            </MovieDetails>\n        )\n    )\n}\n\nexport default MovieCard;","import React from 'react';\nimport styled from 'styled-components';\nimport MovieCard from './MovieCard';\n\nconst Content = styled.div`\n\ttext-align: center;\n\talign-content: center;\n`;\n\nconst SearchResultsDiv = styled.div`\n    text-align: center;\n`;\nconst SearchResults = styled.ul`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: baseline;\n    padding: 16px;\n    align-content: center;\n`;\n\nconst MessageDiv = styled.div`\n    display: block;\n    text-align: center;\n`;\n\nconst Message = styled.p`\n    text-align: center;\n\tfont-size: 20px;\n`;\n\n/**\n * Renders the fetched results of the search\n *\n * @param {object} props props passed from parent component\n */\nconst SearchBarResults = props => {\n    return (\n        <Content>\n            <SearchResultsDiv>\n                <SearchResults>\n                    {props.results.map((value) => (\n                        <MovieCard \n                            posterPath={value.poster_path} \n                            title={value.title}\n                            id={value.id}\n                            key={value.id}\n                        />\n                    ))}\n                </SearchResults>  \n            </SearchResultsDiv>\n            <MessageDiv>\n                {props.exhausted && (\n                        <Message>\n                            No search results to show\n                        </Message>\t\t\t\t\t\n                )}\n            </MessageDiv>\n        </Content>\n    )\n}\n\nexport default SearchBarResults;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Animation = keyframes`\n    0% { margin-bottom: 0; }\n    25% { margin-bottom: 15px }\n    50% { margin-bottom: 30px }\n    75% { margin-bottom: 15px }\n    100% { margin-bottom: 0px }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    height: 50px;\n`;\n\nconst Circle = styled.div`\n    background-color: #4F3F3B;\n    border-radius: 50%;\n    border-color: black;\n    width: 10px;\n    height: 10px;\n    margin: 0 10px;\n    animation: ${Animation} 1s ease-in-out infinite;\n    animation-delay: ${props => props.delay};\n`;\n\nclass Loader extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <Circle delay=\"0s\" />\n                <Circle delay=\"0.25s\" />\n                <Circle delay=\"0.5s\" />\n            </Wrapper>\n        )\n    }\n}\n\nexport default Loader;\n","import axios from 'axios';\nimport { apiKey}  from '../config';\n\n// Create axios instance\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\n/**\n * HTTP Service to make API calls for above set base URL\n *\n * @class HttpService\n */\nclass HttpService {\n    /**\n     * GET Method for HTTP Call\n     *\n     * @static\n     * @param {string} url API URL\n     * @param {object} params Parameters for request\n     * @returns Axios response object\n     * @memberof HttpService\n     */\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","export const apiKey = '2556ac28d3c2f708dba5bb4bbb73cbe3';","import HttpService from '../services/HttpService';\n\nconst url = '/search/movie';\n\n/**\n * Fetch the movie results for asked page\n * \n * @param {string} value search string\n * @param {integer} page page to fetch\n */\nconst searchMovie = (value, page) => {\n    const params = {\n        language: 'en-US',\n        page,\n        query: value,\n    };\n    return HttpService.get(url, params)\n            .then(({data: {results}}) => results)\n            .catch((err) => Promise.reject(err.response));\n}\n\nexport default searchMovie;","import HttpService from '../services/HttpService';\n\nconst url = '/movie/popular';\n\n/**\n * Fetch list of popular movies\n * \n * @param {integer} page page for movie list to fetch\n */\nconst getMovieList = (page) => {\n    const params = {\n        language: 'en-US',\n        page\n    };\n    return HttpService.get(url, params)\n            .then(({data: {results}}) => results)\n            .catch((err) => Promise.reject(err.response));\n}\n\nexport default getMovieList;","import _ from 'lodash';\n/**\n * Finds the movies with matching search string and returns them\n * \n * @param {String} value search string\n * @param {Array} data array of objects of movies\n */\nconst regexpFilter = (value, data) => {\n    const re = new RegExp(_.escapeRegExp(value), 'i');\n    const isMatch = (res) => re.test(res.title);\n    return _.filter(data, isMatch);\n};\n\nexport default regexpFilter;","import React, {Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport SearchQuery from './SearchQuery';\nimport SearchResults from './SearchResults';\nimport Loader from '../../packages/Loader';\nimport {\n    searchMovie,\n    resetSearch,\n    getMovieList,\n    setScrollValue\n} from '../../store/searchMovie/action';\n\nconst LoaderWrapper = styled.div`\n    text-align: center;\n`;\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchBarContainer\n * @props Component Properties\n */\nclass SearchBarContainer extends React.Component {\n\t/**\n\t * Creates an instance of SearchBar.\n\t * \n\t * @param {Object} props\n\t * @memberof SearchBarContainer\n\t */\n\tconstructor(props) {\n        super(props);\n        this.loadingRef = React.createRef();\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n\t}\n\n    /**\n     * Initializes options to set the Intersection Observer\n     *\n     * @memberof SearchBarContainer\n     */\n    componentDidMount() {\n        // Set options for observer\n        const options = {\n            root: null, // Set page as root\n            rootMargin: '0px', \n            threshold: 0,\n        };\n\n        // Create an instance of Intersection Observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n\n        this.props.getMovieList(this.props.list)\n        .then(() => this.observer.observe(this.loadingRef.current));\n    }\n\n    componentWillUnmount () {\n        this.props.resetSearch();\n        this.observer.disconnect();\n    }\n    \n    \n    /**\n     * Handle the observer's action or observation\n     *\n     * @param {array} entities\n     * @memberof SearchBarContainer\n     */\n    handleObserver(entities) {\n        const y = entities[0].boundingClientRect.y;\n        const {\n            value,\n            prev,\n            listExhausted,\n            page,\n            list,\n            searchMovie,\n            getMovieList,\n            setScrollValue\n        } = this.props;\n        if (prev > y && !listExhausted) {\n            if (value) {\n                searchMovie(value, page);\n            } else {\n                getMovieList(list);\n            }\n        }\n        setScrollValue(y);\n    }\n\n\n    /**\n     * Handle the search value change\n     * the function is passed as a prop to child\n     *\n     * @memberof SearchBarContainer\n     */\n    handleSearchChange(val) {\n        const {\n            list,\n            page,\n            resetSearch,\n            getMovieList,\n            searchMovie\n        } = this.props;\n        if (val.length < 1) {\n            resetSearch();\n            getMovieList(list);\n        } else {\n            searchMovie(val, page)\n            .then(() => this.observer.observe(this.loadingRef.current));\n        }\n    }\n    \n\trender() {\n        const {\n            value,\n            results,\n            isLoading,\n            listExhausted\n        } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<SearchQuery\n\t\t\t\t\tsearchString={value}\n                    onSearchChange={this.handleSearchChange}   \n                />\n                <SearchResults \n                    results={results}\n                    loading={isLoading}\n                    exhausted={listExhausted}\n                />\n                {!listExhausted && (\n                    <LoaderWrapper ref={this.loadingRef} >\n                        <Loader />\n                    </LoaderWrapper>\n                )}\n            </Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = ({\n        movie: {\n            isLoading,\n            page,\n            list,\n            results,\n            prev,\n            listExhausted,\n            value,\n            error\n        }\n    }) => {\n    return {\n        isLoading,\n        page,\n        list,\n        results,\n        prev,\n        listExhausted,\n        value,\n        error\n    }\n};\n\nconst mapDispatchToProps = { searchMovie, resetSearch, getMovieList, setScrollValue };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBarContainer);","import { \n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    RESET_SEARCH_BAR,\n    REQUEST_MORE_SEARCH_RESULTS,\n    NO_MORE_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n    SET_SCROLLER_VALUE\n} from './constants';\nimport _searchMovie from '../../helpers/searchMovie';\nimport _getMovieList from '../../helpers/getMovieList';\nimport regexpFilter from '../../helpers/regexpFilter';\n\n/**\n * Invoked if movie search is requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieSearch = (value) => ({ type: REQUEST_MOVIE_SEARCH, value });\n\n/**\n * Invoked if more search results of movie are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMoreResults = () => ({ type: REQUEST_MORE_SEARCH_RESULTS});\n\n/**\n * Invoked if search movie results are successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst searchMovieSuccess = (response, page) => ({\n    type: SEARCH_MOVIE_SUCCESS,\n    payload: response,\n    page: page+1\n});\n\n/**\n * Invoked if error is caused in fetching search movie lists from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst searchMovieError = (error, page) => ({\n    type: SEARCH_MOVIE_ERROR,\n    payload: error,\n    page: page-1\n});\n\n/**\n * Invoked if no more search movie results are fetched from API\n * \n * @returns {Object} Action\n */\nconst noMoreResults = () => ({type: NO_MORE_RESULTS});\n\n/**\n * Action creator to get the search movies\n * \n * @param {integer} value search string\n * @param {integer} page\n * @return {function} \n */\nconst searchMovie = (value, page) => {\n    return dispatch => {\n        if (page === 1) dispatch(reqMovieSearch(value));\n        else dispatch(reqMoreResults());\n        return _searchMovie(value, page)\n            .then((response) => {\n                if (response.length > 0) {\n                    const filtered = regexpFilter(value, response);\n                    dispatch(searchMovieSuccess(filtered, page))\n                } else {\n                    dispatch(noMoreResults())\n                }\n            })\n            .catch(error => dispatch(searchMovieError(error, page)))\n    };\n};\n\n/**\n * Invoked to reset the search bar\n * \n * @returns {Object} Action\n */\nconst resetSearchBar = () => ({type: RESET_SEARCH_BAR})\n\n/**\n * Action creator to reset the search bar\n * \n * @return {function} \n */\nconst resetSearch = () => {\n    return dispatch => dispatch(resetSearchBar());\n}\n\n/**\n * Invoked if movie list is requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieList = () => ({ type: REQUEST_MOVIE_LIST });\n\n/**\n * Invoked if more list of movies are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMoreMovies = () => ({type: REQUEST_MORE_MOVIES});\n\n/**\n * Invoked if movie list is successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} page page of the list\n * @returns {Object} Action\n */\nconst getMovieListSuccess = (response, page) => ({\n    type: GET_MOVIE_LIST_SUCCESS,\n    payload: response,\n    page: page+1\n});\n\n/**\n * Invoked if error is caused in fetching movie lists from the API\n * \n * @param {Array} response response from the API\n * @param {integer} page page of the list\n * @returns {Object} Action\n */\nconst getMovieListError = (error, page) => ({\n    type: GET_MOVIE_LIST_ERROR,\n    payload: error,\n    page: page-1\n});\n\n/**\n * Action creator to get the movie lists\n * \n * @param {integer} page\n * @return {function} \n */\nconst getMovieList = (page) => {\n    return dispatch => {\n        if (page === 1) dispatch(reqMovieList());\n        else dispatch(reqMoreMovies());\n        return _getMovieList(page)\n            .then((response) => {\n                dispatch(getMovieListSuccess(response, page))\n            })\n            .catch(error => dispatch(getMovieListError(error, page)))\n    };\n};\n\n/**\n * Invoked to set the scroller value\n * \n * @param {integer} scroller integer value of scroll\n * @returns {Object} Action\n */\nconst setScroller = (scroller) => ({type: SET_SCROLLER_VALUE, scroll: scroller});\n\n/**\n * Action creator to set the scroller value\n * \n * @param {integer} scroller scroll value\n * @return {function} \n */\nconst setScrollValue = (scroller) => {\n    return (dispatch) => dispatch(setScroller(scroller));\n};\n\nexport {\n    searchMovie,\n    resetSearch,\n    getMovieList,\n    setScrollValue\n};","import React, { Component, Fragment } from 'react';\nimport Home from './Home';\nimport SearchBarContainer from '../SearchBar';\n\n/**\n * Home container\n *\n * @class HomeContainer\n */\nclass HomeContainer extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Home />\n                <SearchBarContainer />\n            </Fragment>\n        );\n    }\n}\n\nexport default HomeContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    margin: 16px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    column-count: 2;\n    column-gap: 4px;\n`;\n\nconst Head = styled.h1`\n    display: block;\n    align-content: center;\n    text-align: center;\n    margin-bottom: 32px;\n`;\n\nconst Card = styled.div`\n    text-align: right;\n    padding-right: 20px;\n    border-right: 2px solid black;\n    width: 50%;\n`;\n\nconst Details = styled.div`\n    text-align: left;\n    width: 50%;\n    margin-right: 10px;\n    margin-left: 20px;\n`;\n\nconst Title = styled.p`\n    font-size: 24px;\n    font-weight: bold;\n`;\n\nconst Subheading = styled.p`\n    font-size: 20px;\n    text-decoration-line: underline;\n    font-weight: bold;\n`;\n\nconst Tagline = styled.p`\n    font-size: 16px;\n`;\n\nconst Overview = styled.p`\n    font-size: 16px;\n    text-align: justify;\n    width: 90%;\n`;\n\nconst Content = styled.p`\n    font-size: 16px;\n`;\n\nconst Video = styled.iframe`\n    height: 22.5vw; /* This is to maintain aspect ratio of video even on window resize */\n    width: 40vw;\n`;\n\nconst Image = styled.img`  \n`;\n\n/**\n * Movie Component\n * \n * @param {object} props props from the parent component\n */\nconst Movie = props => {\n        const imageURL = 'http://image.tmdb.org/t/p/w200';\n        const videoURL = 'https://www.youtube.com/embed/';\n        const {\n            title, \n            posterPath, \n            tagline, \n            overview, \n            releaseDate, \n            voteAverage, \n            voteCount,\n            trailer\n        } = props;\n        return (\n            <Wrapper>\n                <Head>\n                    <Link to='/'>\n                        Movie Hunter\n                    </Link>\n                </Head>\n                <Container>\n                    <Card>\n                        <Image src={`${imageURL}${posterPath}`} alt='loading' />\n                        <Title>\n                            {title}\n                        </Title>\n                        <Tagline>\n                            {tagline}\n                        </Tagline>\n                    </Card>\n                    <Details>\n                        <Subheading>Synopsis</Subheading>\n                        <Overview>{overview}</Overview>\n                        <Content>Released on: {releaseDate}</Content>\n                        {voteCount && (\n                            <Content>Rated {voteAverage} by {voteCount} votes</Content>\n                        )}\n                        {trailer ? (\n                            <Video src={`${videoURL}${trailer}`}>\n                                Trailer\n                            </Video>\n                        ) : (\n                            <Content>Trailer not found</Content>\n                        )}\n                    </Details>\n                </Container>\n            </Wrapper>\n        )\n}\n\nexport default Movie;\n","import HttpService from '../services/HttpService';\n\nconst params = {\n    language: 'en-US',\n    append_to_response: 'videos'\n};\n/**\n * Fetch details of movie\n * \n * @param {integer} movieId ID for movie to fetch\n */\nconst getMovie = (movieId) => {\n    const url = `/movie/${movieId}`;\n    return HttpService.get(url, params)\n            .then(({data}) => data)\n            .catch(err => Promise.reject(err.response));\n}\n\nexport default getMovie;","/**\n * Finds and retuns the trailer in array of results in videos\n * If not found then returns an empty string\n * \n * @param {Object} videos contains array of results\n */\nconst getTrailer = (videos) => {\n    if (videos) {\n        const result = videos.results.find((x) => {\n            return x.type === \"Trailer\";\n        });\n        if (result) {\n            return result.key;\n        } else {\n            return '';\n        }\n    } else {\n        return '';\n    }\n};\n\nexport default getTrailer;","import { \n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n} from './constants';\nimport getMovie from '../../helpers/getMovie';\nimport getTrailer from '../../helpers/getTrailer';\n\n/**\n * Invoked if movie details are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieDetails = () => ({ type: REQUEST_MOVIE_DETAILS });\n\n/**\n * Invoked if movie details are successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst getMovieDetailsSuccess = (response, trailerKey) => ({\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: response,\n    key: trailerKey\n});\n\n/**\n * Invoked if error is caused in fetching movie details from the API\n * \n * @param {Object} error response from the API\n * @returns {Object} Action\n */\nconst getMovieDetailsError = (error) => ({\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error\n});\n\n/**\n * Action creator to get the movie details\n * \n * @param {integer} payload movieId\n * @return {function} \n */\nconst getMovieDetails = (payload) => {\n    return dispatch => {\n        dispatch(reqMovieDetails());\n        return getMovie(payload)\n            .then((response) => {\n                const trailerKey = getTrailer(response.videos);\n                dispatch(getMovieDetailsSuccess(response, trailerKey))\n            })\n            .catch(error => dispatch(getMovieDetailsError(error)))\n    };\n};\n\n\nexport default getMovieDetails;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Movie from './Movie';\nimport Loader from '../../packages/Loader';\nimport getMovieDetails from '../../store/movieDetails/action';\n\n/**\n * Renders the component for Movie Details\n * Shows movie title, poster, synopsis and trailer a few more details\n *\n * @class MovieContainer\n * @props Component Properties\n */\nclass MovieContainer extends React.Component {\n    /**\n     * Perfoms call to get movie details\n     * \n     * @memberof MovieContainer\n     */\n    componentWillMount() {\n        const {match: {params: {movieId} } } = this.props;\n        this.props.getMovieDetails(movieId);\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader />\n        } else {\n            const {data :{\n                title,\n                tagline,\n                overview,\n                poster_path,\n                release_date,\n                vote_average,\n                vote_count\n            },\n                trailer\n            } = this.props;\n            return (\n                this.props.isLoading ? <Loader /> : (\n                    <Movie \n                        title={title}\n                        tagline={tagline}\n                        overview={overview}\n                        posterPath={poster_path}\n                        releaseDate={release_date}\n                        voteAverage={vote_average}\n                        voteCount={vote_count}\n                        trailer={trailer}\n                    />\n                )\n            )\n        }\n    }\n}\n\nconst mapStateToProps = ({getMovieDetails: {data, trailer, isLoading, error}}) => {\n    return {\n        data,\n        trailer,\n        isLoading,\n        error\n    };\n};\n\nconst mapDispatchToProps = { getMovieDetails };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeContainer from '../components/Home';\nimport MovieContainer from '../components/Movie';\n\n/**\n * Create routes \n * @param {Object} props props from the store\n */ \nconst ConfigRoute = (props) => (\n    <Provider store={props.store} >\n        <HashRouter>\n            <Switch>\n            <Route \n                exact\n                path=\"/\" \n                component={HomeContainer}\n                {...props}\n            />\n            <Route \n                exact\n                path=\"/movie/:movieId\" \n                component={MovieContainer}\n                {...props} \n            />\n            </Switch>\n        </HashRouter>\n    </Provider>\n);\n\nexport default ConfigRoute;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configStore from './store/configStore';\nimport ConfigRoutes from './routes';\nimport * as registerServiceWorker from './serviceWorker';\n\n// Define Store\nexport const store = configStore();\n\n// Define app\nconst App = (\n    <ConfigRoutes store={store}/>\n);\n\nReactDOM.render(App, document.getElementById('root'));\nregisterServiceWorker.unregister();\n"],"sourceRoot":""}