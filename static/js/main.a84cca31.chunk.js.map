{"version":3,"sources":["store/movieDetails/reducer.js","store/movieDetails/constants.js","store/searchMovie/reducer.js","store/searchMovie/constants.js","store/configStore.js","components/Home/Home.js","components/SearchBar/SearchQuery.js","components/SearchBar/MovieCard/MovieCard.js","packages/Loader.js","components/SearchBar/SearchResults.js","services/HttpService.js","config.js","helpers/searchMovie.js","helpers/getMovieList.js","helpers/regexpFilter.js","components/SearchBar/SearchBarContainer.js","store/searchMovie/action.js","components/Home/HomeContainer.js","components/Movie/Movie.js","helpers/getMovie.js","helpers/getTrailer.js","store/movieDetails/action.js","components/Movie/MovieContainer.js","routes/index.js","serviceWorker.js","index.js"],"names":["initialState","isLoading","data","trailer","error","getMovieDetails","state","arguments","length","undefined","action","type","Object","objectSpread","payload","key","results","list","page","totalPages","searchMovie","concat","toConsumableArray","middlewareList","applyMiddleware","thunk","appReducer","combineReducers","router","routerReducer","movie","rootReducer","configStore","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","Header","styled","h1","_templateObject","Home","props","react_default","a","createElement","Wrapper","div","SearchQuery_templateObject","InputForm","form","_templateObject2","Input","input","_templateObject3","SearchQuery","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchString","handleInputChange","bind","assertThisInitialized","delayed","_","debounce","onSearchChange","event","value","target","setState","onSubmit","preventDefault","placeholder","onChange","React","Component","MovieDetails","li","MovieCard_templateObject","FlexCard","MovieCard_templateObject2","Image","img","MovieCard_templateObject3","Title","p","_templateObject4","MovieCard","posterPath","id","title","react_router_dom","to","src","alt","Animation","keyframes","Loader_templateObject","Loader_templateObject2","Circle","Loader_templateObject3","delay","Loader","Loader_Wrapper","Content","SearchResults_templateObject","SearchResultsDiv","SearchResults_templateObject2","SearchResults","ul","SearchResults_templateObject3","MessageDiv","SearchResults_templateObject4","Message","_templateObject5","SearchBarResults","loadingRef","prevProps","count","loading","observer","intersectionTarget","Math","round","observerTarget","querySelector","_this2","ref","elem","map","SearchBar_MovieCard_MovieCard","poster_path","packages_Loader","Axios","axios","create","baseURL","params","api_key","HttpService","url","get","language","query","then","_ref","catch","err","Promise","reject","response","getMovieList","regexpFilter","re","RegExp","escapeRegExp","filter","res","test","SearchBarContainer","createRef","setObserver","handleSearchChange","IntersectionObserver","handleObserver","root","threshold","disconnect","entities","_this$props","forEach","item","isIntersecting","intersectionRatio","val","_this$props2","observe","_this$props3","react","SearchBar_SearchQuery","SearchBar_SearchResults","mapDispatchToProps","dispatch","reqMovieSearch","_searchMovie","total_pages","filtered","searchMovieSuccess","searchMovieError","_getMovieList","getMovieListSuccess","getMovieListError","connect","_ref$movie","HomeContainer","components_Home_Home","SearchBar_SearchBarContainer","Movie_templateObject","Container","Movie_templateObject2","Head","Movie_templateObject3","Card","Movie_templateObject4","Details","Movie_templateObject5","_templateObject6","Subheading","_templateObject7","Tagline","_templateObject8","Overview","_templateObject9","_templateObject10","Video","iframe","_templateObject11","_templateObject12","Movie","tagline","overview","releaseDate","voteAverage","voteCount","Movie_Wrapper","Movie_Image","Movie_Title","Movie_Content","append_to_response","getMovie","movieId","getTrailer","videos","result","find","x","trailerKey","getMovieDetailsSuccess","getMovieDetailsError","MovieContainer","match","_this$props$data","release_date","vote_average","vote_count","components_Movie_Movie","_ref$getMovieDetails","ConfigRoute","react_redux_es","store","react_router","assign","exact","path","component","Boolean","location","hostname","__webpack_require__","d","__webpack_exports__","App","routes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a84cca31.chunk.js","sourcesContent":["import { \n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n} from './constants';\n\n// Initial State\nconst initialState = {\n    isLoading: false,\n    data: {},\n    trailer: '',\n    error: null\n};\n\n// Reducer\nconst getMovieDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_MOVIE_DETAILS:\n            return { ...initialState, isLoading: true };\n        case GET_MOVIE_DETAILS_SUCCESS:\n            return { ...state,\n                    isLoading: false,\n                    data: action.payload,\n                    trailer: action.key,\n                };\n        case GET_MOVIE_DETAILS_ERROR:\n                return { ...state,\n                    error: action.payload.error\n                }; \n        default:\n            return state;\n    }\n}\n\nexport default getMovieDetails;","// Request movie details from API constant\nconst REQUEST_MOVIE_DETAILS = 'REQUEST_MOVIE_DETAILS';\n\n// Movie details from API succuess constant\nconst GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\n\n// Movie details from API failure constant\nconst GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\n\nexport {\n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n};","import { \n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    REQUEST_MORE_SEARCH_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n} from './constants';\n\n// Initial State\nconst initialState = {\n    isLoading: true,\n    results: [],\n    list: 1,\n    page: 1,\n    totalPages: 1,\n    error: null\n};\n\n// Reducer\nconst searchMovie = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_MOVIE_SEARCH:\n            return { ...initialState,\n                    isLoading: true,\n                    page: action.page\n                };\n        case REQUEST_MORE_SEARCH_RESULTS:\n            return {...state, isLoading: true};\n        case SEARCH_MOVIE_SUCCESS:\n            return { ...initialState,\n                    isLoading: false,\n                    results: [...state.results, ...action.payload],\n                    page: action.page,\n                    totalPages: action.totalPages\n                };\n        case SEARCH_MOVIE_ERROR:\n            return { ...state,\n                    error: action.payload.error,\n                    page: action.page\n                };\n        case REQUEST_MOVIE_LIST:\n            return { ...initialState, isLoading: true, list: action.page};\n        case REQUEST_MORE_MOVIES:\n            return {...state, isLoading: true};\n        case GET_MOVIE_LIST_SUCCESS:\n            return { ...initialState,\n                    isLoading: false,\n                    results: [...state.results, ...action.payload],\n                    list: action.page,\n                };\n        case GET_MOVIE_LIST_ERROR:\n            return { ...state,\n                    error: action.payload.error,\n                    list: action.page\n                }; \n        default:\n            return state;\n    }\n}\n\nexport default searchMovie;","// Request search movie from API constant\nconst REQUEST_MOVIE_SEARCH = 'REQUEST_MOVIE_SEARCH';\n\n// Search movie from API success constant\nconst SEARCH_MOVIE_SUCCESS = 'SEARCH_MOVIE_SUCCESS';\n\n// Search movie from API failure constant\nconst SEARCH_MOVIE_ERROR = 'SEARCH_MOVIE_ERROR';\n\n// Request for more search results from API constant\nconst REQUEST_MORE_SEARCH_RESULTS = 'REQUEST_MORE_SEARCH_RESULTS';\n\n// Request popular movies from API constant\nconst REQUEST_MOVIE_LIST = 'REQUEST_MOVIE_LIST';\n\n// Popular movies from API success constant\nconst GET_MOVIE_LIST_SUCCESS = 'GET_MOVIE_LIST_SUCCESS';\n\n// Popular movies from API failure constant\nconst GET_MOVIE_LIST_ERROR = 'GET_MOVIE_LIST_ERROR';\n\n// Request more movies from API constant\nconst REQUEST_MORE_MOVIES = 'REQUEST_MORE_MOVIES';\n\n\nexport {\n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    REQUEST_MORE_SEARCH_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n};","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { routerReducer } from 'react-router-redux';\nimport getMovieDetails from './movieDetails/reducer';\nimport movie from './searchMovie/reducer';\n\nconst middlewareList =  process.env.NODE_ENV === 'production' \n    ? applyMiddleware(thunk)\n    : applyMiddleware(thunk, createLogger());\n\n// Reducer\nconst appReducer = combineReducers({\n    router: routerReducer,\n    getMovieDetails,\n    movie\n});\n\n/**\n * Root reducer\n * @param {Object} state Current state\n * @param {Object} action Action\n * @return {Object} App reducer\n */\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n}\n\n// Create Store with enabled redux devTools\nconst configStore = (initialState) => createStore(rootReducer, compose(middlewareList,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nexport default configStore;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.h1`\n    text-align: center;\n    border-bottom: 0.8px solid black;\n    padding-bottom: 12px;\n`\n\n/**\n * Home component\n * \n * @param {object} props props from the parent component\n */\n const Home = props => {\n    return (\n        <Header>Movie Hunter</Header>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    align-content: center;\n    text-align: center;\n`;\nconst InputForm = styled.form`\n    background-color: lightgray;\n`;\n\nconst Input = styled.input`\n    text-align: center;\n    width: 40%;\n    height: 36px;\n`;\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchQuery\n * @props Component Properties\n */\nclass SearchQuery extends React.Component {\n    /**\n     * Creates an instance of SearchBar.\n     *\n     * @param {Object} props\n     * @memberof SearchQuery\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: ''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.delayed = _.debounce(this.props.onSearchChange, 600);\n    }\n\n    /**\n     * Handle the change in input\n     *\n     * @memberof SearchQuery\n     */\n    handleInputChange(event) {\n        const value = event.target.value;\n        this.setState({\n            searchString: value\n        });\n        this.delayed(value);\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <InputForm onSubmit={event => event.preventDefault()}>\n                    <Input\n                        placeholder=\"Search for movie...\"\n                        value={this.state.searchString}\n                        onChange={this.handleInputChange}\n                    />\n                </InputForm>\n            </Wrapper>\n        );\n    }\n}\n\nexport default SearchQuery;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = styled.li`\n    display: inline-block;\n    justify-content: center;\n    padding: 12px 4px 12px 4px;\n    margin-bottom: 20px;\n`;\n\nconst FlexCard = styled.div`\n    text-align: center;\n    height: 320px;\n    width: 240px;\n`;\n\nconst Image = styled.img`\n    max-height: 280px;\n    max-width: 185px;\n`;\n\nconst Title = styled.p`\n    font-size: 16px;\n`;\n\n/**\n * Card for one movie on the homepage\n * Link to Movie Details page for a particular movie\n * Returns nothing if the poster is not found\n *\n * @param {object} props props from the parent component\n */\nconst MovieCard = props => {\n    const imageURL = 'https://image.tmdb.org/t/p/w185';\n    const {posterPath, id, title} = props;\n    return (\n        posterPath && (\n            <MovieDetails >\n                <Link to={`/movie/${id}`} key={id}>\n                    <FlexCard>\n                        <Image \n                            src={`${imageURL}${posterPath}`} alt={title}>\n                        </Image>\n                        <Title>{title}</Title>\n                    </FlexCard>        \n                </Link>\n            </MovieDetails>\n        )\n    )\n}\n\nexport default MovieCard;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Animation = keyframes`\n    0% { margin-bottom: 0; }\n    25% { margin-bottom: 15px }\n    50% { margin-bottom: 30px }\n    75% { margin-bottom: 15px }\n    100% { margin-bottom: 0px }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    height: 50px;\n`;\n\nconst Circle = styled.div`\n    background-color: #4F3F3B;\n    border-radius: 50%;\n    border-color: black;\n    width: 10px;\n    height: 10px;\n    margin: 0 10px;\n    animation: ${Animation} 1s ease-in-out infinite;\n    animation-delay: ${props => props.delay};\n`;\n\nclass Loader extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <Circle delay=\"0s\" />\n                <Circle delay=\"0.25s\" />\n                <Circle delay=\"0.5s\" />\n            </Wrapper>\n        )\n    }\n}\n\nexport default Loader;","import React from 'react';\nimport styled from 'styled-components';\nimport MovieCard from './MovieCard';\nimport Loader from '../../packages/Loader';\n\nconst Content = styled.div`\n\ttext-align: center;\n\talign-content: center;\n`;\n\nconst SearchResultsDiv = styled.div`\n    text-align: center;\n`;\nconst SearchResults = styled.ul`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: baseline;\n    padding: 16px;\n    align-content: center;\n`;\n\nconst MessageDiv = styled.div`\n    display: block;\n    text-align: center;\n`;\n\nconst Message = styled.p`\n    text-align: center;\n    font-size: 20px;\n`;\n\n/**\n * Renders the fetched results of the search\n *\n * @class SearchBarResults\n * @props Component Properties\n */\nclass SearchBarResults extends React.Component {\n    /**\n     * Creates an instance of SearchBar.\n     *\n     * @param {Object} props\n     * @memberof SearchBarResults\n     */\n    constructor(props) {\n        super(props);\n        this.loadingRef = null;\n    }\n\n    /**\n     * Invokes when component updates\n     *\n     * @param {Object} prevProps\n     * @memberof SearchBarResults\n     */\n    componentDidUpdate(prevProps) {\n        const count = this.props.results.length;\n        if (count > 0 && !this.props.loading) {\n            this.props.observer(null);\n            const intersectionTarget = Math.round(count / 10);\n            const observerTarget = this.loadingRef.querySelector(\n                `li:nth-child(${count - intersectionTarget})`\n            );\n            this.props.observer(observerTarget);\n        }\n    }\n\n    render() {\n        return (\n            <Content>\n                <SearchResultsDiv>\n                    <SearchResults ref={elem => (this.loadingRef = elem)}>\n                        {this.props.results.map(value => (\n                            <MovieCard\n                                posterPath={value.poster_path}\n                                title={value.title}\n                                id={value.id}\n                                key={value.id}\n                            />\n                        ))}\n                    </SearchResults>\n                </SearchResultsDiv>\n                {this.props.loading ? <Loader /> : (\n                    <MessageDiv>\n                        {(this.props.page === this.props.totalPages ||\n                            this.props.results.length > 0) && (\n                                <Message>No search results to show</Message>\n                            )}\n                    </MessageDiv>\n                )}\n            </Content>\n        );\n    }\n}\n\nexport default SearchBarResults;\n","import axios from 'axios';\nimport { apiKey}  from '../config';\n\n// Create axios instance\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\n/**\n * HTTP Service to make API calls for above set base URL\n *\n * @class HttpService\n */\nclass HttpService {\n    /**\n     * GET Method for HTTP Call\n     *\n     * @static\n     * @param {string} url API URL\n     * @param {object} params Parameters for request\n     * @returns Axios response object\n     * @memberof HttpService\n     */\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","export const apiKey = '2556ac28d3c2f708dba5bb4bbb73cbe3';","import HttpService from '../services/HttpService';\n\nconst url = '/search/movie';\n\n/**\n * Fetch the movie results for asked page\n * \n * @param {string} value search string\n * @param {integer} page page to fetch\n */\nconst searchMovie = (value, page) => {\n    const params = {\n        language: 'en-US',\n        page,\n        query: value,\n    };\n    return HttpService.get(url, params)\n            .then(({data}) => data)\n            .catch((err) => Promise.reject(err.response));\n}\n\nexport default searchMovie;","import HttpService from '../services/HttpService';\n\nconst url = '/movie/popular';\n\n/**\n * Fetch list of popular movies\n * \n * @param {integer} page page for movie list to fetch\n */\nconst getMovieList = (page) => {\n    const params = {\n        language: 'en-US',\n        page\n    };\n    return HttpService.get(url, params)\n            .then(({data: {results}}) => results)\n            .catch((err) => Promise.reject(err.response));\n}\n\nexport default getMovieList;","import _ from 'lodash';\n/**\n * Finds the movies with matching search string and returns them\n * \n * @param {String} value search string\n * @param {Array} data array of objects of movies\n */\nconst regexpFilter = (value, data) => {\n    const re = new RegExp(_.escapeRegExp(value), 'i');\n    const isMatch = (res) => re.test(res.title);\n    return _.filter(data, isMatch);\n};\n\nexport default regexpFilter;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { forEach } from 'lodash';\nimport SearchQuery from './SearchQuery';\nimport SearchResults from './SearchResults';\nimport {\n    searchMovie,\n    getMovieList\n} from '../../store/searchMovie/action';\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchBarContainer\n * @props Component Properties\n */\nclass SearchBarContainer extends React.Component {\n    /**\n     * Creates an instance of SearchBar.\n     *\n     * @param {Object} props\n     * @memberof SearchBarContainer\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.loadingRef = React.createRef();\n        this.setObserver = this.setObserver.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n    }\n\n    /**\n     * Initializes options to set the Intersection Observer\n     *\n     * @memberof SearchBarContainer\n     */\n    componentDidMount() {\n        // Set options for observer\n        const options = {\n            root: null, // Set page as root\n            threshold: 1\n        };\n\n        // Create an instance of Intersection Observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n\n        this.props.getMovieList(this.props.list);\n    }\n\n\n    /**\n     * Disconnects the observer on unmount and does a search reset\n     *\n     * @memberof SearchBarContainer\n     */\n    componentWillUnmount() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Handle the observer's action or observation\n     *\n     * @param {array} entities\n     * @memberof SearchBarContainer\n     */\n    handleObserver(entities) {\n        const {\n            page,\n            list,\n            searchMovie,\n            getMovieList,\n        } = this.props;\n        const { value } = this.state;\n        forEach(entities, item => {\n            if (item.isIntersecting && item.intersectionRatio === 1) {\n                if (value) {\n                    searchMovie(value, page+1);\n                } else {\n                    getMovieList(list+1);\n                }\n            }\n        });\n    }\n\n    /**\n     * Handle the search value change\n     * the function is passed as a prop to child\n     *\n     * @memberof SearchBarContainer\n     */\n    handleSearchChange(val) {\n        this.setState({ value: val });\n        const {\n            list,\n            page,\n            getMovieList,\n            searchMovie\n        } = this.props;\n        if (val.length < 1) {\n            getMovieList(list);\n        } else {\n            searchMovie(val, page);\n        }\n    }\n\n\n    /**\n     * Set the observer for intersection\n     *\n     * @param {*} target\n     * @memberof SearchBarContainer\n     */\n    setObserver(target) {\n        if (target) {\n            this.observer.observe(target);\n        } else {\n            this.observer.disconnect();\n        }\n    }\n\n    render() {\n        const { results, isLoading, page, totalPages } = this.props;\n        return (\n            <Fragment>\n                <SearchQuery\n                    searchString={this.state.value}\n                    onSearchChange={this.handleSearchChange}\n                />\n                <SearchResults\n                    observer={this.setObserver}\n                    results={results}\n                    loading={isLoading}\n                    page={page}\n                    totalPages={totalPages}\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    movie: { isLoading, page, list, results, totalPages, error }\n}) => ({\n    isLoading,\n    page,\n    list,\n    results,\n    error,\n    totalPages\n});\n\nconst mapDispatchToProps = {\n    searchMovie,\n    getMovieList,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SearchBarContainer);","import { \n    SEARCH_MOVIE_SUCCESS,\n    SEARCH_MOVIE_ERROR,\n    REQUEST_MOVIE_SEARCH,\n    REQUEST_MORE_SEARCH_RESULTS,\n    GET_MOVIE_LIST_SUCCESS,\n    GET_MOVIE_LIST_ERROR,\n    REQUEST_MOVIE_LIST,\n    REQUEST_MORE_MOVIES,\n} from './constants';\nimport _searchMovie from '../../helpers/searchMovie';\nimport _getMovieList from '../../helpers/getMovieList';\nimport regexpFilter from '../../helpers/regexpFilter';\n\n/**\n * Invoked if movie search is requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieSearch = (value) => ({ type: REQUEST_MOVIE_SEARCH, value });\n\n/**\n * Invoked if more search results of movie are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMoreResults = () => ({ type: REQUEST_MORE_SEARCH_RESULTS});\n\n/**\n * Invoked if search movie results are successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst searchMovieSuccess = (response, page, totalPages) => ({\n    type: SEARCH_MOVIE_SUCCESS,\n    payload: response,\n    page,\n    totalPages\n});\n\n/**\n * Invoked if error is caused in fetching search movie lists from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst searchMovieError = (error, page) => ({\n    type: SEARCH_MOVIE_ERROR,\n    payload: error,\n    page: page-1\n});\n\n/**\n * Action creator to get the search movies\n * \n * @param {integer} value search string\n * @param {integer} page\n * @return {function} \n */\nconst searchMovie = (value, page) => {\n    return dispatch => {\n        if (page === 1) dispatch(reqMovieSearch(value));\n        else dispatch(reqMoreResults());\n        return _searchMovie(value, page)\n            .then((response) => {\n                if (page <= response.total_pages) {\n                    const filtered = regexpFilter(value, response.results);\n                    dispatch(searchMovieSuccess(filtered, page, response.total_pages));\n                }\n            })\n            .catch(error => dispatch(searchMovieError(error, page)));\n    };\n};\n\n/**\n * Invoked if movie list is requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieList = () => ({ type: REQUEST_MOVIE_LIST });\n\n/**\n * Invoked if more list of movies are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMoreMovies = () => ({type: REQUEST_MORE_MOVIES});\n\n/**\n * Invoked if movie list is successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} page page of the list\n * @returns {Object} Action\n */\nconst getMovieListSuccess = (response, page) => ({\n    type: GET_MOVIE_LIST_SUCCESS,\n    payload: response,\n    page\n});\n\n/**\n * Invoked if error is caused in fetching movie lists from the API\n * \n * @param {Array} response response from the API\n * @param {integer} page page of the list\n * @returns {Object} Action\n */\nconst getMovieListError = (error, page) => ({\n    type: GET_MOVIE_LIST_ERROR,\n    payload: error,\n    page: page-1\n});\n\n/**\n * Action creator to get the movie lists\n * \n * @param {integer} page\n * @return {function} \n */\nconst getMovieList = (page) => {\n    return dispatch => {\n        if (page === 1) dispatch(reqMovieList());\n        else dispatch(reqMoreMovies());\n        return _getMovieList(page)\n            .then((response) => {\n                dispatch(getMovieListSuccess(response, page))\n            })\n            .catch(error => dispatch(getMovieListError(error, page)))\n    };\n};\n\nexport {\n    searchMovie,\n    getMovieList\n};","import React, { Component, Fragment } from 'react';\nimport Home from './Home';\nimport SearchBarContainer from '../SearchBar';\n\n/**\n * Home container\n *\n * @class HomeContainer\n */\nclass HomeContainer extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Home />\n                <SearchBarContainer />\n            </Fragment>\n        );\n    }\n}\n\nexport default HomeContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    margin: 16px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    column-count: 2;\n    column-gap: 4px;\n`;\n\nconst Head = styled.h1`\n    display: block;\n    align-content: center;\n    text-align: center;\n    margin-bottom: 32px;\n`;\n\nconst Card = styled.div`\n    text-align: right;\n    padding-right: 20px;\n    border-right: 2px solid black;\n    width: 50%;\n`;\n\nconst Details = styled.div`\n    text-align: left;\n    width: 50%;\n    margin-right: 10px;\n    margin-left: 20px;\n`;\n\nconst Title = styled.p`\n    font-size: 24px;\n    font-weight: bold;\n`;\n\nconst Subheading = styled.p`\n    font-size: 20px;\n    text-decoration-line: underline;\n    font-weight: bold;\n`;\n\nconst Tagline = styled.p`\n    font-size: 16px;\n`;\n\nconst Overview = styled.p`\n    font-size: 16px;\n    text-align: justify;\n    width: 90%;\n`;\n\nconst Content = styled.p`\n    font-size: 16px;\n`;\n\nconst Video = styled.iframe`\n    height: 22.5vw; /* This is to maintain aspect ratio of video even on window resize */\n    width: 40vw;\n`;\n\nconst Image = styled.img`  \n`;\n\n/**\n * Movie Component\n * \n * @param {object} props props from the parent component\n */\nconst Movie = props => {\n        const imageURL = 'https://image.tmdb.org/t/p/w200';\n        const videoURL = 'https://www.youtube.com/embed/';\n        const {\n            title, \n            posterPath, \n            tagline, \n            overview, \n            releaseDate, \n            voteAverage, \n            voteCount,\n            trailer\n        } = props;\n        return (\n            <Wrapper>\n                <Head>\n                    <Link to='/'>\n                        Movie Hunter\n                    </Link>\n                </Head>\n                <Container>\n                    <Card>\n                        <Image src={`${imageURL}${posterPath}`} alt='loading' />\n                        <Title>\n                            {title}\n                        </Title>\n                        <Tagline>\n                            {tagline}\n                        </Tagline>\n                    </Card>\n                    <Details>\n                        <Subheading>Synopsis</Subheading>\n                        <Overview>{overview}</Overview>\n                        <Content>Released on: {releaseDate}</Content>\n                        {voteCount && (\n                            <Content>Rated {voteAverage} by {voteCount} votes</Content>\n                        )}\n                        {trailer ? (\n                            <Video src={`${videoURL}${trailer}`}>\n                                Trailer\n                            </Video>\n                        ) : (\n                            <Content>Trailer not found</Content>\n                        )}\n                    </Details>\n                </Container>\n            </Wrapper>\n        )\n}\n\nexport default Movie;\n","import HttpService from '../services/HttpService';\n\nconst params = {\n    language: 'en-US',\n    append_to_response: 'videos'\n};\n/**\n * Fetch details of movie\n * \n * @param {integer} movieId ID for movie to fetch\n */\nconst getMovie = (movieId) => {\n    const url = `/movie/${movieId}`;\n    return HttpService.get(url, params)\n            .then(({data}) => data)\n            .catch(err => Promise.reject(err.response));\n}\n\nexport default getMovie;","/**\n * Finds and retuns the trailer in array of results in videos\n * If not found then returns an empty string\n * \n * @param {Object} videos contains array of results\n */\nconst getTrailer = (videos) => {\n    if (videos) {\n        const result = videos.results.find((x) => {\n            return x.type === \"Trailer\";\n        });\n        if (result) {\n            return result.key;\n        } else {\n            return '';\n        }\n    } else {\n        return '';\n    }\n};\n\nexport default getTrailer;","import { \n    GET_MOVIE_DETAILS_SUCCESS,\n    GET_MOVIE_DETAILS_ERROR,\n    REQUEST_MOVIE_DETAILS\n} from './constants';\nimport getMovie from '../../helpers/getMovie';\nimport getTrailer from '../../helpers/getTrailer';\n\n/**\n * Invoked if movie details are requested from API\n * \n * @returns {Object} Action\n */\nconst reqMovieDetails = () => ({ type: REQUEST_MOVIE_DETAILS });\n\n/**\n * Invoked if movie details are successfully fetched from the API\n * \n * @param {Array} response response from the API\n * @param {integer} trailerKey id for the trailer on youtube\n * @returns {Object} Action\n */\nconst getMovieDetailsSuccess = (response, trailerKey) => ({\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: response,\n    key: trailerKey\n});\n\n/**\n * Invoked if error is caused in fetching movie details from the API\n * \n * @param {Object} error response from the API\n * @returns {Object} Action\n */\nconst getMovieDetailsError = (error) => ({\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error\n});\n\n/**\n * Action creator to get the movie details\n * \n * @param {integer} payload movieId\n * @return {function} \n */\nconst getMovieDetails = (payload) => {\n    return dispatch => {\n        dispatch(reqMovieDetails());\n        return getMovie(payload)\n            .then((response) => {\n                const trailerKey = getTrailer(response.videos);\n                dispatch(getMovieDetailsSuccess(response, trailerKey))\n            })\n            .catch(error => dispatch(getMovieDetailsError(error)))\n    };\n};\n\n\nexport default getMovieDetails;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport Loader from \"../../packages/Loader\";\nimport getMovieDetails from \"../../store/movieDetails/action\";\n\n/**\n * Renders the component for Movie Details\n * Shows movie title, poster, synopsis and trailer a few more details\n *\n * @class MovieContainer\n * @props Component Properties\n */\nclass MovieContainer extends React.Component {\n    /**\n     * Perfoms call to get movie details\n     *\n     * @memberof MovieContainer\n     */\n    componentWillMount() {\n        this.props.getMovieDetails(this.props.match.params.movieId);\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return <Loader />;\n        }\n        const {\n            data: {\n                title,\n                tagline,\n                overview,\n                poster_path,\n                release_date,\n                vote_average,\n                vote_count\n            },\n            trailer\n        } = this.props;\n        return (\n            <Movie\n                title={title}\n                tagline={tagline}\n                overview={overview}\n                posterPath={poster_path}\n                releaseDate={release_date}\n                voteAverage={vote_average}\n                voteCount={vote_count}\n                trailer={trailer}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    getMovieDetails: { data, trailer, isLoading, error }\n}) => ({\n    data,\n    trailer,\n    isLoading,\n    error\n});\n\nconst mapDispatchToProps = { getMovieDetails };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MovieContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeContainer from '../components/Home';\nimport MovieContainer from '../components/Movie';\n\n/**\n * Create routes \n * @param {Object} props props from the store\n */ \nconst ConfigRoute = (props) => (\n    <Provider store={props.store} >\n        <HashRouter>\n            <Switch>\n            <Route \n                exact\n                path=\"/\" \n                component={HomeContainer}\n                {...props}\n            />\n            <Route \n                exact\n                path=\"/movie/:movieId\" \n                component={MovieContainer}\n                {...props} \n            />\n            </Switch>\n        </HashRouter>\n    </Provider>\n);\n\nexport default ConfigRoute;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configStore from './store/configStore';\nimport ConfigRoutes from './routes';\nimport * as registerServiceWorker from './serviceWorker';\n\n// Define Store\nexport const store = configStore();\n\n// Define app\nconst App = (\n    <ConfigRoutes store={store}/>\n);\n\nReactDOM.render(App, document.getElementById('root'));\nregisterServiceWorker.unregister();\n"],"sourceRoot":""}