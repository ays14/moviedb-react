{"version":3,"sources":["components/Home/Home.js","services/HttpService.js","config.js","components/SearchBar/SearchQuery.js","components/MovieCard/MovieCard.js","components/SearchBar/SearchResults.js","packages/Loader.js","components/SearchBar/SearchBarContainer.js","helpers/searchMovieHelper.js","components/MovieList/MovieList.js","helpers/getMovieListHelper.js","components/MovieList/MovieListContainer.js","components/Home/HomeContainer.js","helpers/getMovie.js","components/Movie/Movie.js","components/Movie/MovieContainer.js","serviceWorker.js","index.js","routes/index.js"],"names":["Header","styled","h1","_templateObject","Home","props","react_default","a","createElement","Axios","axios","create","baseURL","params","api_key","HttpService","url","get","Wrapper","div","SearchQuery_templateObject","InputForm","form","_templateObject2","Input","input","_templateObject3","SearchQuery","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchString","handleInputChange","bind","assertThisInitialized","e","value","target","setState","onSearchChange","onSubmit","event","preventDefault","placeholder","onChange","_","debounce","leading","maxWait","React","Component","MovieDetails","li","MovieCard_templateObject","FlexCard","MovieCard_templateObject2","Image","img","MovieCard_templateObject3","Text","p","_templateObject4","MovieCard","posterPath","id","title","react_router_dom","to","concat","key","src","alt","Content","SearchResults_templateObject","SearchResultsDiv","SearchResults_templateObject2","SearchResults","ul","SearchResults_templateObject3","MessageDiv","SearchResults_templateObject4","Message","_templateObject5","SearchBarResults","results","map","components_MovieCard_MovieCard","poster_path","exhausted","Animation","keyframes","Loader_templateObject","Loader_templateObject2","Circle","Loader_templateObject3","delay","Loader","Loader_Wrapper","LoaderWrapper","SearchBarContainer_templateObject","initialState","isLoading","page","listExhausted","prev","SearchBarContainer","loadingRef","createRef","handleSearchChange","getQueryResults","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","entities","y","boundingClientRect","newPage","getMoreQueryResults","val","length","onSearching","queryVal","_this2","Promise","resolve","reject","language","query","then","_ref","data","catch","err","response","newData","filteredData","regexpMatch","observe","current","console","log","_this3","_ref2","searchMoreResults","oldData","toConsumableArray","re","RegExp","escapeRegExp","filter","res","test","react","SearchBar_SearchQuery","SearchBar_SearchResults","loading","ref","packages_Loader","Container","MovieList_templateObject","MovieList_templateObject2","MovieList","MovieList_Wrapper","getMovieList","MovieListContainer_templateObject","MovieListContainer","error","components_MovieList_MovieList","MovieListContainer_LoaderWrapper","HomeContainer","isSearching","isUserSearching","components_Home_Home","SearchBar_SearchBarContainer","MovieList_MovieListContainer","getMovie","movieId","append_to_response","Movie_templateObject","Movie_templateObject2","Head","Movie_templateObject3","Card","Movie_templateObject4","Details","Movie_templateObject5","Title","_templateObject6","Subheading","_templateObject7","Tagline","_templateObject8","Overview","_templateObject9","_templateObject10","Video","iframe","_templateObject11","_templateObject12","Movie","tagline","overview","releaseDate","voteAverage","voteCount","trailer","Movie_Wrapper","Movie_Container","Movie_Image","Movie_Content","MovieContainer","getTrailer","match","videos","result","find","x","type","components_Movie_Movie","release_date","vote_average","vote_count","Boolean","window","location","hostname","App","react_router","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.193b35d0.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.h1`\n    text-align: center;\n    border-bottom: 0.5px solid black;\n    padding-bottom: 10px;\n`\n\n/**\n * Home component\n * \n * @param {object} props props from the parent component\n */\n const Home = props => {\n    return (\n        <Header>Movie Hunter</Header>\n    );\n}\n\nexport default Home;\n","import axios from 'axios';\nimport { apiKey}  from '../config';\n\n// Create axios instance\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\n/**\n * HTTP Service to make API calls for above set base URL\n *\n * @class HttpService\n */\nclass HttpService {\n    /**\n     * GET Method for HTTP Call\n     *\n     * @static\n     * @param {string} url API URL\n     * @param {object} params Parameters for request\n     * @returns Axios response object\n     * @memberof HttpService\n     */\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","export const apiKey = '2556ac28d3c2f708dba5bb4bbb73cbe3';","import React from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    align-content: center;\n    text-align: center;\n`;\nconst InputForm = styled.form`\n\tbackground-color: lightgray;\n`;\n\nconst Input = styled.input`\n\ttext-align: center;\n\twidth: 40%;\n\theight: 35px;\n`;\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchQuery\n * @props Component Properties\n */\nclass SearchQuery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: ''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n\t/**\n     * Handle the change in input\n     *\n     * @memberof SearchQuery\n     */\n    handleInputChange(e) {\n\t\tconst value = e.target.value;\n\t\tthis.setState({ \n\t\t\tsearchString: value\n        });\n        this.props.onSearchChange(value);\n\t}\n\n\trender() {\n\t\treturn (\n            <Wrapper>\n                <InputForm onSubmit={event => event.preventDefault()}>\n                    <Input\n                        placeholder=\"Search for movie...\"\n                        value={this.state.searchString}\n                        onChange={_.debounce(this.handleInputChange, 1000, {\n                            leading: true,\n                            maxWait: 1500,\n                        })} />\n                </InputForm>\n            </Wrapper>\n\t\t)\n\t}\n}\n\nexport default SearchQuery;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieDetails = styled.li`\n    display: inline-block;\n    align-self: center;\n    padding: 8px 2px 8px 2px;\n    margin-bottom: 15px;\n`;\n\nconst FlexCard = styled.div`\n    text-align: center;\n    height: 320px;\n    width: 240px;\n`;\n\nconst Image = styled.img`\n    max-height: 280px;\n    max-width: 185px;\n`;\n\nconst Text = styled.p`\n    font-size: 14px;\n    text-decoration: darkslategray;\n`;\n\n/**\n * Card for one movie on the homepage\n * Link to Movie Details page for a particular movie\n * Returns nothing if the poster is not found\n *\n * @param {object} props props from the parent component\n */\nconst MovieCard = props => {\n    const imageURL = 'http://image.tmdb.org/t/p/w185';\n    const {posterPath, id, title} = props;\n    return (\n        posterPath && (\n            <MovieDetails >\n                <Link to={`/movie/${id}`} key={id}>\n                    <FlexCard>\n                        <Image \n                            src={imageURL+posterPath} alt={title}>\n                        </Image>\n                        <Text>{title}</Text>\n                    </FlexCard>        \n                </Link>\n            </MovieDetails>\n        )\n    )\n}\n\nexport default MovieCard;","import React from 'react';\nimport styled from 'styled-components';\n\nimport MovieCard from '../MovieCard';\n\nconst Content = styled.div`\n\ttext-align: center;\n\talign-content: center;\n`;\n\nconst SearchResultsDiv = styled.div`\n    text-align: center;\n`;\nconst SearchResults = styled.ul`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: baseline;\n\talign-content: left;\n`;\n\nconst MessageDiv = styled.div`\n    display: block;\n    text-align: center;\n`;\n\nconst Message = styled.p`\n    text-align: center;\n\tfont-size: 20px;\n`;\n\n/**\n * Renders the fetched results of the search\n *\n * @param {object} props props passed from parent component\n */\nconst SearchBarResults = props => {\n    return (\n        <Content>\n            <SearchResultsDiv>\n                <SearchResults>\n                    {props.results.map((value) => (\n                        <MovieCard \n                            posterPath={value.poster_path} \n                            title={value.title}\n                            id={value.id}\n                            key={value.id}\n                        />\n                    ))}\n                </SearchResults>  \n            </SearchResultsDiv>\n            <MessageDiv>\n                {props.exhausted && (\n                        <Message>\n                            No search results to show\n                        </Message>\t\t\t\t\t\n                )}\n            </MessageDiv>\n        </Content>\n    )\n}\n\nexport default SearchBarResults;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Animation = keyframes`\n    0% { margin-bottom: 0; }\n    25% { margin-bottom: 15px }\n    50% { margin-bottom: 30px }\n    75% { margin-bottom: 15px }\n    100% { margin-bottom: 0px }\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    height: 50px;\n`;\n\nconst Circle = styled.div`\n    background-color: #4F3F3B;\n    border-radius: 50%;\n    border-color: black;\n    width: 10px;\n    height: 10px;\n    margin: 0 10px;\n    animation: ${Animation} 1s ease-in-out infinite;\n    animation-delay: ${props => props.delay};\n`;\n\nclass Loader extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <Circle delay=\"0s\" />\n                <Circle delay=\"0.25s\" />\n                <Circle delay=\"0.5s\" />\n            </Wrapper>\n        )\n    }\n}\n\nexport default Loader;\n","import React, {Fragment} from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport {searchMovie, searchMoreResults} from '../../helpers/searchMovieHelper';\n\nimport SearchQuery from './SearchQuery';\nimport SearchResults from './SearchResults';\nimport Loader from '../../packages/Loader';\n\nconst LoaderWrapper = styled.div`\n    text-align: center;\n`;\n\nconst initialState = {\n\tisLoading: false,\n\tresults: [],\n\tvalue: '',\n\tpage: 1,\n    listExhausted: false,\n    prev: 0,\n};\n\n/**\n * Renders the search bar and also the fetched results\n * Shows the results in a scrollable lists of all the pages of search results fetched\n *\n * @class SearchBarContainer\n * @props Component Properties\n */\nclass SearchBarContainer extends React.Component {\n\t/**\n\t * Creates an instance of SearchBar.\n\t * \n\t * @param {*} props\n\t * @memberof SearchBarContainer\n\t */\n\tconstructor(props) {\n        super(props);\n        this.loadingRef = React.createRef();\n        this.state = initialState;\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.getQueryResults = this.getQueryResults.bind(this);\n\t}\n\n    /**\n     * Invoked to set the Intersection Observer\n     * Also calls the first set of data from API\n     *\n     * @memberof SearchBarContainer\n     */\n    componentDidMount() {\n        // Set options for observer\n        const options = {\n            root: null, // Set page as root\n            rootMargin: '0px', \n            threshold: 0,\n        };\n\n        // Create an instance of Intersection Observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n\n        // Observe the ref with value loadingRef\n        // this.observer.observe(this.loadingRef);\n    }\n    \n    /**\n     * Handle the observer's action or observation\n     *\n     * @param {array} entities\n     * @memberof SearchBarContainer\n     */\n    handleObserver(entities) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prev > y && !this.state.listExhausted) {\n          const newPage = this.state.page + 1;\n          this.setState({ page: newPage, isLoading: true });\n          const { value } = this.state;\n          this.getMoreQueryResults(value, newPage);\n        }\n        this.setState({ prev: y });\n    }\n\n\n    /**\n     * Handle the search value change\n     * the function is passed as a prop to child\n     *\n     * @memberof SearchBarContainer\n     */\n    handleSearchChange(val) {\n        if (val.length < 1) {\n            this.props.onSearching(false);\n            return this.setState(initialState);\n        }\n        this.props.onSearching(true);\n        this.getQueryResults(val);\n    }\n    \n    /**\n     * Handles the first call to fetch the data\n     *\n     * @param {string} queryVal\n     * @memberof SearchBarContainer\n     */\n    getQueryResults(queryVal) {\n        searchMovie(queryVal)\n        .then(newData => {\n            const filteredData = this.regexpMatch(queryVal, newData);\n            this.setState({\n                isLoading: false,\n                results: filteredData,\n                value: queryVal,\n            });\n            this.observer.observe(this.loadingRef.current);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n    /**\n     * Handles subsequent calls to fetch the data\n     *\n     * @param {string} queryVal\n     * @param {integer} page\n     * @memberof SearchBarContainer\n     */\n    getMoreQueryResults(queryVal, page) {\n        searchMoreResults(queryVal, page)\n        .then(newData => {\n            const oldData = this.state.results;\n            const filteredData = this.regexpMatch(queryVal, newData);\n            if(newData.length > 0) {\n                this.setState({\n                    isLoading: false,\n                    results: [...oldData, ...filteredData],\n                });\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tlistExhausted: true,\n                });\n            }\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n\t/**\n\t * Performs reg exp match for search string in the results\n\t *\n\t * @memberof SearchBarContainer\n\t * @param {string} value value of search string\n\t * @param {string} data value of result of API call\n\t */\n\tregexpMatch(value, data) {\n\t\tconst re = new RegExp(_.escapeRegExp(value), 'i');\n\t\tconst isMatch = (res) => re.test(res.title);\n\t\treturn _.filter(data, isMatch);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<SearchQuery\n\t\t\t\t\tsearchString={this.state.value}\n                    onSearchChange={this.handleSearchChange}   \n\t\t\t\t/>\n                \n\t\t\t\t{this.state.value && (\n                    <Fragment>\n                        <SearchResults \n                            results={this.state.results}\n                            loading={this.state.isLoading}\n                            exhausted={this.state.listExhausted}\n                        />\n                        {!this.state.listExhausted && (\n                            <LoaderWrapper ref={this.loadingRef} >\n                                <Loader />\n                            </LoaderWrapper>\n                        )}\n                    </Fragment>\n                )}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default SearchBarContainer;\n","import HttpService from '../services/HttpService';\n\nconst url = '/search/movie';\n\n/**\n * Fetch the first page of movie search\n * \n * @param {string} value search string\n */\nconst searchMovie = (value) => {\n    return new Promise((resolve, reject) => {\n        HttpService.get(url, {\n            language: 'en-US',\n            page: 1,\n            query: value,\n        }).then(({data: {results}}) => {\n            resolve(results);\n        }).catch((err) => {\n            reject(err.response);\n        });\n    });\n}\n\n/**\n * Fetch the movie results for asked page\n * \n * @param {string} value search string\n * @param {integer} page page to fetch\n */\nconst searchMoreResults = (value, page) => {\n    return new Promise((resolve, reject) => {\n        HttpService.get(url, {\n            language: 'en-US',\n            page: page,\n            query: value,\n        }).then(({data: {results}}) => {\n            resolve(results);\n        }).catch((err) => {\n            reject(err.response);\n        });\n    });\n}\n\nexport {\n    searchMovie,\n    searchMoreResults,\n};","import React from 'react';\nimport styled from 'styled-components';\n\nimport MovieCard from '../MovieCard';\n\nconst Container = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    margin: 10px ;\n    align-content: center;\n`;\n\nconst Wrapper = styled.div`\n    min-height: 900px;\n`;\n\n/**\n * MovieList Component\n * Renders Movie Card as a mapping of array fetched from props\n *\n * @param {object} props props from the parent component\n */\nconst MovieList = props => {\n    return (\n        <Wrapper>\n            <Container>\n                {props.data.map((value) => (\n                    <MovieCard \n                        posterPath={value.poster_path} \n                        title={value.title}\n                        id={value.id}\n                        key={value.id}\n                    />\n                    ))}\n            </Container>\n        </Wrapper>\n    )\n}\n\nexport default MovieList;","import HttpService from '../services/HttpService';\n\nconst url = '/movie/popular';\n\n/**\n * Fetch list of popular movies\n * \n * @param {integer} page page for movie list to fetch\n */\nconst getMovieList = (page) => {\n    return new Promise((resolve, reject) => {\n        HttpService.get(url, {\n            language: 'en-US',\n            page: page\n        }).then(({data: {results}}) => {\n            resolve(results);\n        }).catch((err) => {\n            reject(err.response);\n        });\n    });\n}\n\nexport default getMovieList;","import React, {Fragment} from 'react';\nimport styled from 'styled-components';\n\nimport MovieList from './MovieList';\nimport getMovieList from '../../helpers/getMovieListHelper';\nimport Loader from '../../packages/Loader';\n\nconst LoaderWrapper = styled.div`\n    display: block;\n    text-align: center;\n`;\n\n/**\n * Renders and infinitely scrollable list\n * Stores the data in state as an Array and calls MovieCard to show each movie\n *\n * @class MovieListContainer\n */\nclass MovieListContainer extends React.Component {\n    /**\n     * Creates an instance of PopularMovies.\n     * \n     * @param {*} props\n     * @memberof MovieListContainer\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            page: 1,\n            data: [],\n            prev: 0,\n        };\n        this.loadingRef = React.createRef();\n    }\n\n    /**\n     * Calls the first set of data from API call\n     * Initializes the Intersection Observer to assist in infinite scroll\n     *\n     * @memberof MovieListContainer\n     */\n    componentDidMount() {\n        this.getQueryResults();\n        \n        // Set options for observer\n        const options = {\n            root: null, // Set page as root\n            rootMargin: '0px', \n            threshold: 0,\n        };\n\n        // Create an instance of Intersection Observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n\n        // Observe the ref with value loadingRef\n        this.observer.observe(this.loadingRef.current);\n    }\n    \n    /**\n     * Handle the observer's action or observation\n     *\n     * @param {array} entities\n     * @memberof MovieListContainer\n     */\n    handleObserver(entities) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prev > y) {\n          const newPage = this.state.page + 1;\n          this.setState({ page: newPage, isLoading: true });\n          this.getQueryResults();\n        }\n        this.setState({ prev: y });\n    }\n\n    /**\n     * Fetch more movies via API call incrementing the page by one\n     * And add them to state\n     * @memberof MovieListContainer\n     */\n    getQueryResults() {\n        getMovieList(this.state.page)\n        .then((response) => {\n            const oldData = this.state.data;\n            this.setState({\n                data: [...oldData, ...response],\n                isLoading: false,\n            });\n        })\n        .catch((error) => console.log(error))\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <MovieList data={this.state.data} />\n                <LoaderWrapper ref={this.loadingRef} >\n                    <Loader />\n                </LoaderWrapper>\n            </Fragment>\n        )\n    }\n}\n\nexport default MovieListContainer;","import React, { Component, Fragment } from 'react';\nimport Home from './Home';\nimport SearchBarContainer from '../SearchBar';\nimport MovieListContainer from '../MovieList';\n\n/**\n * Home container\n *\n * @class HomeContainer\n */\nclass HomeContainer extends Component {\n    /**\n     * Creates an instance of HomeContainer\n     *\n     * @param {object} props\n     * @memberof HomeContainer\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSearching: false\n        };\n        this.isUserSearching = this.isUserSearching.bind(this);\n    }\n\n    /**\n     * Handles the state of searching\n     *\n     * @memberof HomeContainer\n     */\n    isUserSearching(value) {\n        if (value) {\n            this.setState({\n                isSearching: true,\n            });\n        } else {\n            this.setState({\n                isSearching: false,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Home />\n                <SearchBarContainer \n                    onSearching={this.isUserSearching} \n                />\n                {!this.state.isSearching && <MovieListContainer />}        \n            </Fragment>\n        );\n    }\n}\n\nexport default HomeContainer;","import HttpService from '../services/HttpService';\n\n/**\n * Fetch details of movie\n * \n * @param {integer} movieId ID for movie to fetch\n */\nconst getMovie = (movieId) => {\n    const url = `/movie/${movieId}`;\n    return new Promise((resolve, reject) => {\n        HttpService.get((url), {\n            language: 'en-US',\n            append_to_response: 'videos'\n        }).then(({data}) => {\n            resolve(data);\n        }).catch((err) => {\n            reject(err.response);\n        });\n    });\n}\n\nexport default getMovie;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n`;\n\nconst Container = styled.div`\n    display: flex;\n    column-count: 2;\n    column-gap: 5px;\n`;\n\nconst Head = styled.h1`\n    display: block;\n    align-content: center;\n    text-align: center;\n    margin-block-end: 30px;\n`;\n\nconst Card = styled.div`\n    text-align: right;\n    padding-right: 20px;\n    border-right: 2px solid black;\n    width: 50%;\n`;\n\nconst Details = styled.div`\n    text-align: left;\n    width: 50%;\n    margin-right: 10px;\n    margin-left: 20px;\n`;\n\nconst Title = styled.p`\n    font-size: 24px;\n    font-weight: bold;\n`;\n\nconst Subheading = styled.p`\n    font-size: 20px;\n    text-decoration-line: underline;\n    font-weight: bold;\n`;\n\nconst Tagline = styled.p`\n    font-size: 16px;\n`;\n\nconst Overview = styled.p`\n    font-size: 16px;\n    text-align: justify;\n    width: 90%;\n`;\n\nconst Content = styled.p`\n    font-size: 16px;\n`;\n\nconst Video = styled.iframe`\n    height: 90%;\n    width: 90%;\n`;\n\nconst Image = styled.img`  \n`;\n\n/**\n * Movie Component\n * \n * @param {object} props props from the parent component\n */\nconst Movie = props => {\n        const imageURL = 'http://image.tmdb.org/t/p/w200';\n        const videoURL = 'https://www.youtube.com/embed/';\n        const {\n            title, \n            posterPath, \n            tagline, \n            overview, \n            releaseDate, \n            voteAverage, \n            voteCount,\n            trailer\n        } = props;\n        return (\n            <Wrapper>\n                <Head>\n                    <Link to='/'>\n                        Movie Hunter\n                    </Link>\n                </Head>\n                <Container>\n                    <Card>\n                        <Image src={imageURL+posterPath} alt='loading' />\n                        <Title>\n                            {title}\n                        </Title>\n                        <Tagline>\n                            {tagline}\n                        </Tagline>\n                    </Card>\n                    <Details>\n                        <Subheading>Synopsis</Subheading>\n                        <Overview>{overview}</Overview>\n                        <Content>Released on: {releaseDate}</Content>\n                        {voteCount && (\n                            <Content>Rated {voteAverage} by {voteCount} votes</Content>\n                        )}\n                        {trailer ? (\n                            <Video src={videoURL+trailer}>\n                                Trailer\n                            </Video>\n                        ) : (\n                            <Content>Trailer not found</Content>\n                        )}\n                    </Details>\n                </Container>\n            </Wrapper>\n        )\n}\n\nexport default Movie;\n","import React from 'react';\nimport getMovie from '../../helpers/getMovie';\nimport Movie from './Movie';\nimport Loader from '../../packages/Loader';\n\n/**\n * Renders the component for Movie Details\n * Shows movie title, poster, synopsis and trailer a few more details\n *\n * @class MovieContainer\n * @props Component Properties\n */\nclass MovieContainer extends React.Component {\n    /**\n     * Creates an instance of Movie.\n     *\n     * @param {object} props\n     * @memberof MovieContainer\n     */\n    constructor(props) {\n        super(props);\n            this.state = {\n            data: {},\n            trailer: '',\n            isLoading: true,\n        };\n        this.getTrailer = this.getTrailer.bind(this);\n    }\n    \n    /**\n     * Perfoms API call to get movie details\n     * Uses HTTP Service\n     * \n     * @memberof MovieContainer\n     */\n    componentWillMount() {\n        const {match: {params: {movieId} } } = this.props;\n        getMovie(movieId).then(response => {\n            this.setState({\n                isLoading: true,\n                data: response,\n                videos: response.videos,\n            });\n            this.getTrailer();\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n    /**\n     * Checks whether trailer is found in JSON fetched from movie details\n     *\n     * @returns youtube key of trailer\n     * @memberof MovieContainer\n     */\n    getTrailer() {\n        const {videos} = this.state;\n        if (videos) {\n            const result = videos.results.find((x) => {\n                return x.type === \"Trailer\";\n            });\n            if (result) {\n                this.setState({\n                    trailer: result.key,\n                    isLoading: false,\n                });\n            } else {\n                this.setState({\n                    trailer: '',\n                    isLoading: false,\n                });\n            }\n        }\n    }\n\n    render() {\n        return (\n            this.state.isLoading ? <Loader /> : (\n                <Movie \n                    title={this.state.data.title}\n                    tagline={this.state.data.tagline}\n                    overview={this.state.data.overview}\n                    posterPath={this.state.data.poster_path}\n                    releaseDate={this.state.data.release_date}\n                    voteAverage={this.state.data.vote_average}\n                    voteCount={this.state.data.vote_count}\n                    trailer={this.state.trailer}\n                />\n            )\n        )\n    }\n}\n\nexport default MovieContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './routes';\nimport * as registerServiceWorker from './serviceWorker';\n\n// Define app\nconst App = (\n    <Routes />\n);\n\nReactDOM.render(App, document.getElementById('root'));\nregisterServiceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport HomeContainer from '../components/Home';\nimport MovieContainer from '../components/Movie';\nimport Loader from '../packages/Loader';\n\n/**\n * Create routes \n */\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={HomeContainer} />\n      <Route path=\"/loader\" exact component={Loader} />\n      <Route path=\"/movie/:movieId\" exact component={MovieContainer} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}