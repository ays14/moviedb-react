{"version":3,"sources":["services/HttpService.js","components/MovieCard/index.js","components/PopularMovies/index.js","components/SearchBar/index.js","components/Home/index.js","components/Movie/index.js","serviceWorker.js","index.js","routes/index.js"],"names":["Axios","axios","create","baseURL","params","api_key","HttpService","url","get","MovieDetails","styled","li","_templateObject","FlexCard","div","_templateObject2","MovieCard","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","poster_path","react_default","a","createElement","react_router_dom","to","concat","id","key","src","alt","title","React","Component","FlexContainer","ul","PopularMovies_templateObject","Content","PopularMovies_templateObject2","Loader","_templateObject3","PopularMovies","_this","state","isLoading","page","prev","getMoreQueryResults","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","newPage","setState","_this2","language","then","response","results","toConsumableArray","catch","err","console","log","_this3","map","value","components_MovieCard","ref","SearchBar_templateObject","Input","input","SearchBar_templateObject2","SearchResults","SearchBar_templateObject3","initialState","movieId","match","searchString","listExhausted","SearchBar","handleInputChange","e","target","setTimeout","length","re","RegExp","_","escapeRegExp","isMatch","result","test","query","filter","handleScroll","assertThisInitialized","window","addEventListener","removeEventListener","innerHeight","scrollY","getMoreSearchResults","oldData","SearchBar_Content","placeholder","onChange","debounce","leading","Header","h1","Home_templateObject","Home","components_SearchBar","components_PopularMovies","Container","Movie_templateObject","Movie_templateObject2","Head","Movie_templateObject3","Card","_templateObject4","Details","_templateObject5","Video","iframe","_templateObject6","Movie","trailerFound","append_to_response","undefined","videos","find","x","type","movie","Movie_FlexContainer","tagline","overview","release_date","vote_count","vote_average","getTrailer","Boolean","location","hostname","App","react_router","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d34a50c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = \"2556ac28d3c2f708dba5bb4bbb73cbe3\";\n//https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=2556ac28d3c2f708dba5bb4bbb73cbe3\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\nclass HttpService {\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\n\nconst MovieDetails = styled.li`\n    display: inline-block;\n    align-self: center;\n    padding: 8px 2% 8px 2%;\n    margin-bottom: 15px;\n`;\n\nconst FlexCard = styled.div`\n    text-align: center;\n    height: 320px;\n    width: 240px;\n`;\n\nclass MovieCard extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     isLoading: false,\n        //     page: 1,\n        //     data: [],\n        // }\n        // this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w185';\n\n        return (\n            this.props.data.poster_path ? (\n                <MovieDetails >\n                    <Link to={`/movie/${this.props.data.id}`} key={this.props.data.id}>\n                        <FlexCard>\n                            <img \n                                src={imageURL+this.props.data.poster_path} alt={this.props.data.title}>\n                            </img>\n                            <p>{this.props.data.title}</p>\n                        </FlexCard>        \n                    </Link>\n                </MovieDetails>\n            ) : (\n                null   \n            )\n        )\n    }\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport MovieCard from '../MovieCard/';\nimport HttpService from '../../services/HttpService';\n\nconst FlexContainer = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    margin: 10px ;\n    /* justify-content: center; */\n    align-content: center;\n`;\n\nconst Content = styled.div`\n    min-height: 900px;\n`;\n\nconst Loader = styled.div`\n    display: block;\n    text-align: center;\n`;\n\nclass PopularMovies extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            page: 1,\n            data: [],\n            prev: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.getMoreQueryResults();\n        // Options\n        var options = {\n            root: null, // Page as root\n            rootMargin: '0px',\n            threshold: 1.0\n        };\n        // Create an observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n        //Observ the `loadingRef`\n        this.observer.observe(this.loadingRef);\n    }\n    \n    handleObserver(entities, observer) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prev > y) {\n        //   const lastMovie = this.state.data[this.state.data.length - 1];\n          const newPage = this.state.page + 1;\n          this.setState({ page: newPage, isLoading: true });\n          this.getMoreQueryResults();\n        }\n        this.setState({ prev: y });\n    }\n\n    getMoreQueryResults() {\n        HttpService.get('/movie/popular', {language: 'en-US', page: this.state.page}).then(response => {\n            const results = this.state.data;\n            this.setState({\n                data: [...results, ...response.data.results],\n                isLoading: false,\n            });\n            // console.log(this.state.data[0].title);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n    render() {\n        return (\n            <Content>\n                <FlexContainer >\n                    {this.state.data.map((value) => (\n                        <MovieCard data={value} />\n                        ))}\n                    {/* {this.state.isLoading && <h1>Loading more movies</h1>} */}\n                    <Loader ref={loadingRef => (this.loadingRef = loadingRef)} >\n                        <h3>Loading...</h3>\n                    </Loader>\n                </FlexContainer>\n            </Content>\n        )\n    }\n}\n\nexport default PopularMovies;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\nimport MovieCard from '../MovieCard/';\n\nconst Content = styled.div`\n  text-align: center;\n  align-content: center;\n`;\n\nconst Input = styled.input`\n  text-align: center;\n  width: 40%;\n  height: 35px;\n`;\n\nconst SearchResults = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    justify-content: center;\n    align-content: center;\n`;\n\nconst initialState = {\n    isLoading: false,\n    results: [],\n    value: '',\n    title: [],\n    movieId: [],\n    page: 1,\n    match: false,\n    searchString: '',\n    listExhausted: false,\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleScroll = this.handleScroll.bind(this);\n}\n\ncomponentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n}\n\ncomponentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n}\n\nhandleScroll() {\n    if(!this.state.listExhausted && (window.innerHeight + window.scrollY) > (window.innerHeight - 200) && !this.state.isLoading && (this.state.searchString !== ''))\n        {\n            const newPage = this.state.page+1;\n            this.setState({isLoading: true, page: newPage});\n            this.getMoreSearchResults();\n        }\n}\n\ngetMoreSearchResults() {\n    HttpService.get(`/search/movie`, {language: 'en-US', query : this.state.searchString, page:this.state.page}).then(response => {\n        const data = response.data.results;\n        const oldData = this.state.results;\n        // console.log(data.length);\n        if(data.length > 0) {\n          this.setState({\n            isLoading: false,\n            results: [...oldData, ..._.filter(data, this.state.match)],\n          });\n        } else {\n            this.setState({\n                isLoading: false,\n                listExhausted: true,\n            })\n        }\n    }).catch((err) => {\n        console.log(err.response);\n    });\n}\n\n  handleInputChange = (e) => {\n    const value = e.target.value;\n    this.setState({ isLoading: true, value })\n      setTimeout(() => {\n        if (this.state.value.length < 1) {return this.setState(initialState);}\n            //   console.log(value);\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n            const isMatch = result => re.test(result.title);\n\n            HttpService.get(`/search/movie`, {language: 'en-US', query : value, page:this.state.page}).then(response => {\n              const data = response.data.results;\n              this.setState({\n                isLoading: false,\n                results: _.filter(data, isMatch),\n                // results: data,\n                match: isMatch,\n                searchString: value,\n              });\n          }).catch((err) => {\n              console.log(err.response);\n          });\n    }, 1000);\n  }\n\n  // getArray(arr, k) {\n  //   let tarr = [];\n  //   const checkKey = k;\n  //   arr.map((value) => {\n  //       tarr.push(value[checkKey]);\n  //   });\n  //   return tarr;\n  // }\n\n  render() {\n    return (\n      <Content>\n          <form>\n            <Input\n              placeholder=\"Search for movie...\"\n              value={this.state.value}\n              onChange={_.debounce(this.handleInputChange, 1000, {\n                leading:true\n              })}\n            />\n        </form>\n            <SearchResults>\n                {this.state.results.map((value) => (\n                    <MovieCard data={value} />\n                    ))}\n                    {!this.state.listExhausted ? (\n                        <div>\n                            {this.state.isLoading && <h3>Searching for movies...</h3>}\n                        </div>\n                    ) : (\n                        <h3>No more results to search and show</h3>\n                    )}\n            </SearchResults>  \n          </Content>\n    )\n  }\n }\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PopularMovies from '../PopularMovies';\nimport SearchBar from '../SearchBar/';\n\nconst Header = styled.h1`\n    text-align: center;\n    border-bottom: 0.5px solid black;\n    padding-bottom: 10px;\n`\n\nclass Home extends React.Component {\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         data: [],\n    //         isSearching: false,\n    //     }\n    // }\n\n    // componentWillMount() {\n    //     HttpService.get('/movie/popular', {language: 'en-US', page: 1}).then(response => {\n\n    //         this.setState({\n    //             data: response.data.results,\n    //         });\n    //         // console.log(this.state.data[0].title);\n    //     }).catch((err) => {\n    //         console.log(err.response);\n    //     });\n\n    // }\n\n\n    render() {\n        return (\n            <div>\n                <Header>Movie Hunter</Header>\n                <SearchBar />\n                <Header>Popular Movies</Header>\n                <PopularMovies \n                    // data={this.state.data}\n                />        \n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\n\nconst Container = styled.div`\n    display: block;\n`\nconst FlexContainer = styled.div`\n    display: flex;\n    column-count: 2;\n    column-gap: 25%;\n`\n\nconst Head = styled.h1`\n    display: block;\n    align-content: center;\n    text-align: center;\n    margin-block-end: 3%;\n`;\n\nconst Card = styled.div`\n    margin-top: 1.5%;\n    margin-right: 1.5%;\n    text-align: right;\n    border-right: 2px solid black;\n    padding-right: 3%;\n    width: 50%;\n`;\n\nconst Details = styled.div`\n    text-align: left;\n    width: 50%;\n    margin-right: 10%;\n    margin-left: 1.5%;\n`;\n\nconst Video = styled.iframe`\n    height: 90%;\n    width: 100%;\n`;\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n            this.state = {\n            data: {},\n            trailerFound: true\n        }\n    }\n    \n    componentWillMount() {\n        const {match: {params: {movieId} } } = this.props; \n        HttpService.get(`/movie/${movieId}`, {language: 'en-US', append_to_response: 'videos'}).then(response => {\n            // console.log(response.data);\n            this.setState({\n                data: response.data,\n            });\n            // console.log(this.state.data[0].title);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n\n    }\n\n    getTrailer() {\n        if (this.state.data.videos !== undefined) {\n            const videos = this.state.data.videos.results.find((x) => {\n                return x.type === \"Trailer\";\n            });\n            if (videos === undefined) {\n                this.setState({\n                    trailerFound: false\n                });\n            } else {\n                return videos.key;\n            }\n        }\n    }\n\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w200';\n        const movie = this.state.data;      \n        console.log(movie);\n        return (\n            <Container>\n                <Head>\n                    <Link to='/'>\n                        Movie Hunter\n                    </Link>\n                </Head>\n                <hr></hr>\n                <FlexContainer>\n                    <Card>\n                        <img src={imageURL+movie.poster_path} alt='loading'></img>\n                        <h2><strong>{movie.title}</strong></h2>\n                        <p>{movie.tagline}</p>\n                    </Card>\n                    <Details>\n                        <p><strong>Synopsis: </strong>{movie.overview}</p>\n                        <p>Released on: {movie.release_date}</p>\n                        {movie.vote_count === 0 ? (\n                            null\n                        ) : (\n                            <p>Rated {movie.vote_average} by {movie.vote_count} votes</p>\n                        )}\n                        {this.state.trailerFound ? (\n                            <Video src={`https://www.youtube.com/embed/${this.getTrailer()}`}>\n\n                            </Video>\n                        ) : (\n                            <p>Trailer not found</p>\n                        )}\n                    </Details>\n                </FlexContainer>\n            </Container>\n        )\n    }\n}\n\nexport default Movie;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './routes';\nimport * as registerServiceWorker from './serviceWorker';\n\nconst App = (\n    <Routes />\n);\n\nReactDOM.render(App, document.getElementById('root'));\nregisterServiceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from '../components/Home/';\nimport Movie from '../components/Movie/';\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/movie/:movieId\" exact component={Movie} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}