{"version":3,"sources":["services/HttpService.js","components/PopularMovies/index.js","components/SearchBar/index.js","components/Home/index.js","components/Movie/index.js","serviceWorker.js","index.js","routes/index.js"],"names":["Axios","axios","create","baseURL","params","api_key","HttpService","url","get","PopularMovies","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","page","data","handleScroll","bind","assertThisInitialized","window","addEventListener","removeEventListener","innerHeight","scrollY","document","body","offsetHeight","newPage","setState","getMoreQueryResults","_this2","language","then","response","results","concat","toConsumableArray","catch","err","console","log","imageURL","react_default","a","createElement","map","value","react_router_dom","to","id","key","src","poster_path","alt","title","vote_average","vote_count","React","Component","initialState","movieId","Content","styled","div","_templateObject","Input","input","_templateObject2","SearchResults","_templateObject3","SearchBar","handleInputChange","e","target","setTimeout","length","re","RegExp","_","escapeRegExp","isMatch","result","test","query","filter","placeholder","onChange","debounce","leading","x","Header","h1","Home_templateObject","Home","components_SearchBar","components_PopularMovies","Movie","trailerFound","match","append_to_response","undefined","videos","find","type","movie","style","width","header","release_date","revenue","tagline","overview","getTrailer","frameBorder","allow","allowFullScreen","height","Boolean","location","hostname","App","react_router","path","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79111a91.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = \"2556ac28d3c2f708dba5bb4bbb73cbe3\";\n//https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=2556ac28d3c2f708dba5bb4bbb73cbe3\nconst Axios = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: apiKey\n    },\n});\n\nclass HttpService {\n    static get(url, params) {\n        return Axios.get(url, {params});\n    }\n}\n\nexport default HttpService;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport HttpService from '../../services/HttpService';\n\nclass PopularMovies extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading:false,\n            page:1,\n            data: [],\n        }\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n    \n    handleScroll() {\n        if(window.innerHeight + window.scrollY > (document.body.offsetHeight - 200) && !this.state.isLoading)\n            {\n                const newPage = this.state.page+1;\n                this.setState({isLoading: true, page: newPage});\n                this.getMoreQueryResults();\n            }\n    }\n\n    getMoreQueryResults() {\n        HttpService.get('/movie/popular', {language: 'en-US', page: this.state.page}).then(response => {\n            const results = this.state.data;\n            this.setState({\n                data: [...results, ...response.data.results],\n                isLoading: false,\n            });\n            // console.log(this.state.data[0].title);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n    }\n\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w185';\n\n        return ( \n                <table >\n            {this.props.data.map((value) => (\n                <Link to={`/movie/${value.id}`} key={value.id}>\n                        <th>\n                            <tr>\n                            <img src={imageURL+value.poster_path} alt={value.title}>\n                            </img>\n                            </tr>\n                            <tr>\n                            {value.title}\n                            </tr>\n                            <tr>\n                            {value.vote_average} ({value.vote_count})\n                            </tr>\n                        </th>\n                </Link>\n            ))}\n            {this.state.isLoading && <h1>Loading more movies</h1>}\n            {this.state.data.map((value) => (\n                <Link to={`/movie/${value.id}`} key={value.id}>\n                        <th>\n                            <tr>\n                            <img src={imageURL+value.poster_path} alt={value.title}>\n                            </img>\n                            </tr>\n                            <tr>\n                            {value.title}\n                            </tr>\n                            <tr>\n                            {value.vote_average} ({value.vote_count})\n                            </tr>\n                        </th>\n                </Link>\n            ))}\n            </table>\n        )\n    }\n}\n\nexport default PopularMovies;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport HttpService from '../../services/HttpService';\n\nconst initialState = { isLoading: false, results: [], value: '', title: [], movieId: [] };\n\nconst Content = styled.div`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  color: black;\n  background: rgba(184, 184, 184, 1);\n  border: 1px;\n  border-color: black;\n  border-radius: 3px;\n  text-align: center;\n  width: 600px;\n  height: 40px;\n`;\n\nconst SearchResults = styled.div`\n  text-align:left;\n  display: inline-block; \n`;\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n\n  }\n \n  handleInputChange = (e) => {\n    const value = e.target.value;\n    this.setState({ isLoading: true, value })\n      setTimeout(() => {\n        if (this.state.value.length < 1) {return this.setState(initialState);}\n              console.log(value);\n              \n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n            const isMatch = result => re.test(result.title);\n            \n            HttpService.get(`/search/movie`, {language: 'en-US', query : value}).then(response => {\n              const data = response.data.results;\n              this.setState({\n                isLoading: false,\n                results: _.filter(data, isMatch),\n              });\n          }).catch((err) => {\n              console.log(err.response);\n          });\n    }, 1000);\n  }\n\n  // getArray(arr, k) {\n  //   let tarr = [];\n  //   const checkKey = k;\n  //   arr.map((value) => {\n  //       tarr.push(value[checkKey]);\n  //   });\n  //   return tarr;\n  // }\n \n  render() {\n    return (\n      <div>\n      <Content>\n          <form>\n            <Input\n              placeholder=\"Search for movie...\"\n              value={this.state.value}\n              onChange={_.debounce(this.handleInputChange, 1000, {\n                leading:true\n              })}\n            />\n            {this.state.isLoading && <h3>Searching for movies...</h3>}\n            </form>\n      </Content>\n      <SearchResults>\n        <ul>\n          {this.state.results.map((x) => (\n            <li><Link to={`/movie/${x.id}`}>{x.title}</Link></li>\n          ))}\n        </ul>\n      </SearchResults>\n      </div>\n    )\n  }\n }\n\nexport default SearchBar;","import React from 'react';\nimport styled from 'styled-components';\n\nimport PopularMovies from '../PopularMovies';\nimport SearchBar from '../SearchBar/';\nimport HttpService from '../../services/HttpService';\n\nconst Header = styled.h1`\n    text-align: center;\n`\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n        }\n    }\n\n    componentWillMount() {\n        HttpService.get('/movie/popular', {language: 'en-US', page: 1}).then(response => {\n\n            this.setState({\n                data: response.data.results,\n            });\n            // console.log(this.state.data[0].title);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Header>Movie Hunter</Header>\n                <SearchBar />\n                <Header>Popular Movies</Header>\n                <br></br>\n                <PopularMovies \n                    data={this.state.data}\n                />        \n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HttpService from '../../services/HttpService';\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props)\n            this.state = {\n            data: {},\n            trailerFound: true\n        }\n    }\n    \n    componentWillMount() {\n        const {match: {params: {movieId} } } = this.props; \n        HttpService.get(`/movie/${movieId}`, {language: 'en-US', append_to_response: 'videos'}).then(response => {\n            // console.log(response.data);\n            this.setState({\n                data: response.data,\n            });\n            // console.log(this.state.data[0].title);\n        }).catch((err) => {\n            console.log(err.response);\n        });\n\n    }\n\n    getTrailer() {\n        if (this.state.data.videos !== undefined) {\n            const videos = this.state.data.videos.results.find((x) => {\n                return x.type === \"Trailer\";\n            });\n            if (videos === undefined) {\n                this.setState({\n                    trailerFound: false\n                });\n            } else {\n                return videos.key;\n            }\n        }\n    }\n\n    render() {\n        const imageURL = 'http://image.tmdb.org/t/p/w200';\n        const movie = this.state.data;      \n\n        return (\n            <div>\n                <table>\n                <tbody>\n                    <tr>\n                        <th style={{width: 600}}>\n                            <img src={imageURL+movie.poster_path} alt='loading'>\n                                {movie.header}\n                            </img>\n                        </th>\n                        <th >\n                            <p>Released Date</p>\n                            <p>{movie.release_date}</p>\n                        </th>\n                        <th>\n                            <p>Revenue</p>\n                            <p>$ {movie.revenue !== 0 ? movie.revenue : 'N/A'}</p>\n                        </th>\n                    </tr>\n                    <tr>\n                        <td>\n                            <p>{movie.tagline}</p>\n                            <p>{movie.overview}</p>\n                            {movie.vote_count === 0 ? (\n                                <p>Rating Unavailable</p>\n                            ) : (\n                                <p>Rated {movie.vote_average} by {movie.vote_count} votes</p>\n                            )}\n                        </td>\n                        <td>\n                        {this.state.trailerFound && <iframe src={`https://www.youtube.com/embed/${this.getTrailer()}`}\n                            frameBorder='0'\n                            allow='autoplay; encrypted-media'\n                            allowFullScreen\n                            title='video'\n                            height='270'\n                            width='480'\n                            />}\n                        {!this.state.trailerFound && <td>Trailer not found</td>}\n                        </td>\n                        <td>\n                            <Link to='/'>\n                                <button>Back</button>\n                            </Link>\n                        </td>\n                    </tr>\n                </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Movie;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './routes';\nimport * as registerServiceWorker from './serviceWorker';\n\nconst App = (\n    <Routes />\n);\n\nReactDOM.render(App, document.getElementById('root'));\nregisterServiceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from '../components/Home/';\nimport Movie from '../components/Movie/';\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/movie/:movieId\" exact component={Movie} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}